<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" height="1286" onload="init(evt)" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><script xmlns=""/><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#ffffff" offset="5%"/><stop stop-color="#ffffff" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"\"Segoe UI\", \"Source Sans Pro\", Calibri, Candara, Arial, sans-serif"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00"/><text id="details" x="10" y="1269.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1355.199951171875" y="24.00">Search</text><text id="matched" x="1355.199951171875" y="1269.00"> </text><svg id="frames" x="10" width="1445.199951171875"><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (18,498,601 bytes, 1.52%)</title><rect x="0.0860%" y="885" width="1.5247%" height="15" fill="rgb(0,196,0)"/><text x="0.2936%" y="895.50">..] </text></g><g><title>rocksdb::UncompressSerializedBlock(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="869" width="1.4708%" height="15" fill="rgb(0,212,0)"/><text x="0.3475%" y="879.50">..] </text></g><g><title>rocksdb::UncompressBlockData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="853" width="1.4708%" height="15" fill="rgb(0,239,176)"/><text x="0.3475%" y="863.50">..] </text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) [polkadot-parachain] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="837" width="1.4708%" height="15" fill="rgb(0,195,194)"/><text x="0.3475%" y="847.50">..] </text></g><g><title>rocksdb::Snappy_Uncompress(char const*, unsigned long, unsigned long*, rocksdb::MemoryAllocator*) [polkadot-parachain] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="821" width="1.4708%" height="15" fill="rgb(0,222,62)"/><text x="0.3475%" y="831.50">..] </text></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="805" width="1.4708%" height="15" fill="rgb(0,190,116)"/><text x="0.3475%" y="815.50">.. </text></g><g><title>_rjem_malloc [libbytehound.so] (17,844,378 bytes, 1.47%)</title><rect x="0.1399%" y="789" width="1.4708%" height="15" fill="rgb(0,233,146)"/><text x="0.3475%" y="799.50">..] </text></g><g><title>rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt;&gt;*) [polkadot-parachain] (18,604,840 bytes, 1.53%)</title><rect x="0.0852%" y="965" width="1.5335%" height="15" fill="rgb(0,220,21)"/><text x="0.2928%" y="975.50">..] </text></g><g><title>rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt;&gt;*) [polkadot-parachain] (18,604,840 bytes, 1.53%)</title><rect x="0.0852%" y="949" width="1.5335%" height="15" fill="rgb(0,213,28)"/><text x="0.2928%" y="959.50">..] </text></g><g><title>rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) [polkadot-parachain] (18,595,432 bytes, 1.53%)</title><rect x="0.0860%" y="933" width="1.5327%" height="15" fill="rgb(0,207,111)"/><text x="0.2936%" y="943.50">..] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kIndex::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kIndex&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kIndex&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (18,595,432 bytes, 1.53%)</title><rect x="0.0860%" y="917" width="1.5327%" height="15" fill="rgb(0,229,208)"/><text x="0.2936%" y="927.50">..] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kIndex::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kIndex&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kIndex&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (18,595,432 bytes, 1.53%)</title><rect x="0.0860%" y="901" width="1.5327%" height="15" fill="rgb(0,216,177)"/><text x="0.2936%" y="911.50">..] </text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (44,396,160 bytes, 3.66%)</title><rect x="1.6197%" y="901" width="3.6593%" height="15" fill="rgb(0,196,0)"/><text x="1.8273%" y="911.50">..hain] </text></g><g><title>rocksdb::BlockFetcher::PrepareBufferForBlockFromFile() [polkadot-parachain] (44,396,160 bytes, 3.66%)</title><rect x="1.6197%" y="885" width="3.6593%" height="15" fill="rgb(0,224,18)"/><text x="1.8273%" y="895.50">..hain] </text></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (44,396,160 bytes, 3.66%)</title><rect x="1.6197%" y="869" width="3.6593%" height="15" fill="rgb(0,190,116)"/><text x="1.8273%" y="879.50">...0.30] </text></g><g><title>_rjem_malloc [libbytehound.so] (44,396,160 bytes, 3.66%)</title><rect x="1.6197%" y="853" width="3.6593%" height="15" fill="rgb(0,233,146)"/><text x="1.8273%" y="863.50">..d.so] </text></g><g><title>rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&amp;, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*) [polkadot-parachain] (63,100,520 bytes, 5.20%)</title><rect x="0.0852%" y="981" width="5.2010%" height="15" fill="rgb(0,225,171)"/><text x="0.2928%" y="991.50">..arachain] </text></g><g><title>rocksdb::FullFilterBlockReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*) [polkadot-parachain] (44,495,680 bytes, 3.67%)</title><rect x="1.6187%" y="965" width="3.6675%" height="15" fill="rgb(0,202,189)"/><text x="1.8263%" y="975.50">..hain] </text></g><g><title>rocksdb::FilterBlockReaderCommon&lt;rocksdb::ParsedFullFilterBlock&gt;::ReadFilterBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*) [polkadot-parachain] (44,483,136 bytes, 3.67%)</title><rect x="1.6197%" y="949" width="3.6664%" height="15" fill="rgb(0,225,66)"/><text x="1.8273%" y="959.50">..hain] </text></g><g><title>std::enable_if&lt;((rocksdb::ParsedFullFilterBlock::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::ParsedFullFilterBlock&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (44,483,136 bytes, 3.67%)</title><rect x="1.6197%" y="933" width="3.6664%" height="15" fill="rgb(0,232,18)"/><text x="1.8273%" y="943.50">..hain] </text></g><g><title>std::enable_if&lt;((rocksdb::ParsedFullFilterBlock::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::ParsedFullFilterBlock&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (44,483,136 bytes, 3.67%)</title><rect x="1.6197%" y="917" width="3.6664%" height="15" fill="rgb(0,228,28)"/><text x="1.8273%" y="927.50">..hain] </text></g><g><title>rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&amp;, rocksdb::TableReaderOptions const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt;&gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, bool) const [polkadot-parachain] (63,645,988 bytes, 5.25%)</title><rect x="0.0752%" y="1013" width="5.2459%" height="15" fill="rgb(0,233,183)"/><text x="0.2828%" y="1023.50">..arachain] </text></g><g><title>rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&amp;, rocksdb::ImmutableOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::BlockBasedTableOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt;&gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, std::shared_ptr&lt;rocksdb::CacheReservationManager&gt;, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::string const&amp;, unsigned long, std::array&lt;unsigned long, (unsigned long)2&gt;) [polkadot-parachain] (63,645,988 bytes, 5.25%)</title><rect x="0.0752%" y="997" width="5.2459%" height="15" fill="rgb(0,195,24)"/><text x="0.2828%" y="1007.50">..arachain] </text></g><g><title>rocksdb::CompactionJob::Run() [polkadot-parachain] (64,153,581 bytes, 5.29%)</title><rect x="0.0346%" y="1093" width="5.2878%" height="15" fill="rgb(0,214,30)"/><text x="0.2422%" y="1103.50">..arachain] </text></g><g><title>rocksdb::CompactionJob::Run()::$_2::operator()(rocksdb::Status&amp;) const [polkadot-parachain] (63,744,576 bytes, 5.25%)</title><rect x="0.0683%" y="1077" width="5.2540%" height="15" fill="rgb(0,215,167)"/><text x="0.2759%" y="1087.50">..arachain] </text></g><g><title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**) [polkadot-parachain] (63,744,576 bytes, 5.25%)</title><rect x="0.0683%" y="1061" width="5.2540%" height="15" fill="rgb(0,225,4)"/><text x="0.2759%" y="1071.50">..arachain] </text></g><g><title>rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::BasicTypedCacheInterface&lt;rocksdb::TableReader, (rocksdb::CacheEntryRole)13, rocksdb::Cache*&gt;::TypedHandle**, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature) [polkadot-parachain] (63,744,576 bytes, 5.25%)</title><rect x="0.0683%" y="1045" width="5.2540%" height="15" fill="rgb(0,228,17)"/><text x="0.2759%" y="1055.50">..arachain] </text></g><g><title>rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, int, bool, unsigned long, rocksdb::Temperature) [polkadot-parachain] (63,729,092 bytes, 5.25%)</title><rect x="0.0696%" y="1029" width="5.2528%" height="15" fill="rgb(0,231,119)"/><text x="0.2772%" y="1039.50">..arachain] </text></g><g><title>rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) [polkadot-parachain] (64,632,970 bytes, 5.33%)</title><rect x="0.0000%" y="1109" width="5.3273%" height="15" fill="rgb(0,216,28)"/><text x="0.2076%" y="1119.50">..arachain] </text></g><g><title>rocksdb::DBImpl::BGWorkCompaction(void*) [polkadot-parachain] (64,643,338 bytes, 5.33%)</title><rect x="0.0000%" y="1141" width="5.3281%" height="15" fill="rgb(0,238,102)"/><text x="0.2076%" y="1151.50">..arachain] </text></g><g><title>rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) [polkadot-parachain] (64,643,338 bytes, 5.33%)</title><rect x="0.0000%" y="1125" width="5.3281%" height="15" fill="rgb(0,205,146)"/><text x="0.2076%" y="1135.50">..arachain] </text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (4,578,107 bytes, 0.38%)</title><rect x="5.3383%" y="853" width="0.3773%" height="15" fill="rgb(0,196,0)"/><text x="5.5459%" y="863.50"/></g><g><title>rocksdb::UncompressSerializedBlock(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="837" width="0.3720%" height="15" fill="rgb(0,212,0)"/><text x="5.5513%" y="847.50"/></g><g><title>rocksdb::UncompressBlockData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="821" width="0.3720%" height="15" fill="rgb(0,239,176)"/><text x="5.5513%" y="831.50"/></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="805" width="0.3720%" height="15" fill="rgb(0,195,194)"/><text x="5.5513%" y="815.50"/></g><g><title>rocksdb::Snappy_Uncompress(char const*, unsigned long, unsigned long*, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="789" width="0.3720%" height="15" fill="rgb(0,222,62)"/><text x="5.5513%" y="799.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="773" width="0.3720%" height="15" fill="rgb(0,190,116)"/><text x="5.5513%" y="783.50"/></g><g><title>_rjem_malloc [libbytehound.so] (4,512,932 bytes, 0.37%)</title><rect x="5.3437%" y="757" width="0.3720%" height="15" fill="rgb(0,233,146)"/><text x="5.5513%" y="767.50"/></g><g><title>rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt;&gt;*) [polkadot-parachain] (4,797,103 bytes, 0.40%)</title><rect x="5.3378%" y="933" width="0.3954%" height="15" fill="rgb(0,220,21)"/><text x="5.5454%" y="943.50"/></g><g><title>rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt;&gt;*) [polkadot-parachain] (4,797,103 bytes, 0.40%)</title><rect x="5.3378%" y="917" width="0.3954%" height="15" fill="rgb(0,213,28)"/><text x="5.5454%" y="927.50"/></g><g><title>rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) [polkadot-parachain] (4,791,727 bytes, 0.39%)</title><rect x="5.3383%" y="901" width="0.3950%" height="15" fill="rgb(0,207,111)"/><text x="5.5459%" y="911.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kIndex::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kIndex&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kIndex&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (4,791,727 bytes, 0.39%)</title><rect x="5.3383%" y="885" width="0.3950%" height="15" fill="rgb(0,229,208)"/><text x="5.5459%" y="895.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kIndex::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kIndex&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kIndex&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (4,791,727 bytes, 0.39%)</title><rect x="5.3383%" y="869" width="0.3950%" height="15" fill="rgb(0,216,177)"/><text x="5.5459%" y="879.50"/></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (3,782,418 bytes, 0.31%)</title><rect x="5.7338%" y="869" width="0.3118%" height="15" fill="rgb(0,196,0)"/><text x="5.9414%" y="879.50"/></g><g><title>rocksdb::BlockFetcher::PrepareBufferForBlockFromFile() [polkadot-parachain] (3,782,418 bytes, 0.31%)</title><rect x="5.7338%" y="853" width="0.3118%" height="15" fill="rgb(0,224,18)"/><text x="5.9414%" y="863.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (3,782,418 bytes, 0.31%)</title><rect x="5.7338%" y="837" width="0.3118%" height="15" fill="rgb(0,190,116)"/><text x="5.9414%" y="847.50"/></g><g><title>_rjem_malloc [libbytehound.so] (3,782,418 bytes, 0.31%)</title><rect x="5.7338%" y="821" width="0.3118%" height="15" fill="rgb(0,233,146)"/><text x="5.9414%" y="831.50"/></g><g><title>rocksdb::FullFilterBlockReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*) [polkadot-parachain] (3,994,229 bytes, 0.33%)</title><rect x="5.7332%" y="933" width="0.3292%" height="15" fill="rgb(0,202,189)"/><text x="5.9408%" y="943.50"/></g><g><title>rocksdb::FilterBlockReaderCommon&lt;rocksdb::ParsedFullFilterBlock&gt;::ReadFilterBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*) [polkadot-parachain] (3,987,061 bytes, 0.33%)</title><rect x="5.7338%" y="917" width="0.3286%" height="15" fill="rgb(0,225,66)"/><text x="5.9414%" y="927.50"/></g><g><title>std::enable_if&lt;((rocksdb::ParsedFullFilterBlock::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::ParsedFullFilterBlock&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (3,987,061 bytes, 0.33%)</title><rect x="5.7338%" y="901" width="0.3286%" height="15" fill="rgb(0,232,18)"/><text x="5.9414%" y="911.50"/></g><g><title>std::enable_if&lt;((rocksdb::ParsedFullFilterBlock::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::ParsedFullFilterBlock&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::ParsedFullFilterBlock&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (3,987,061 bytes, 0.33%)</title><rect x="5.7338%" y="885" width="0.3286%" height="15" fill="rgb(0,228,28)"/><text x="5.9414%" y="895.50"/></g><g><title>rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&amp;, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*) [polkadot-parachain] (8,791,914 bytes, 0.72%)</title><rect x="5.3378%" y="949" width="0.7247%" height="15" fill="rgb(0,225,171)"/><text x="5.5454%" y="959.50"/></g><g><title>rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&amp;, rocksdb::TableReaderOptions const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt;&gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, bool) const [polkadot-parachain] (9,103,610 bytes, 0.75%)</title><rect x="5.3321%" y="981" width="0.7504%" height="15" fill="rgb(0,233,183)"/><text x="5.5397%" y="991.50"/></g><g><title>rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&amp;, rocksdb::ImmutableOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::BlockBasedTableOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt;&gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, std::shared_ptr&lt;rocksdb::CacheReservationManager&gt;, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::string const&amp;, unsigned long, std::array&lt;unsigned long, (unsigned long)2&gt;) [polkadot-parachain] (9,103,610 bytes, 0.75%)</title><rect x="5.3321%" y="965" width="0.7504%" height="15" fill="rgb(0,195,24)"/><text x="5.5397%" y="975.50"/></g><g><title>rocksdb::FlushJob::WriteLevel0Table() [polkadot-parachain] (9,159,946 bytes, 0.75%)</title><rect x="5.3282%" y="1061" width="0.7550%" height="15" fill="rgb(0,234,135)"/><text x="5.5358%" y="1071.50"/></g><g><title>rocksdb::BuildTable(std::string const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::TableBuilderOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt;&gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt;&gt; &gt;&gt;, rocksdb::FileMetaData*, std::vector&lt;rocksdb::BlobFileAddition, std::allocator&lt;rocksdb::BlobFileAddition&gt;&gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt;&gt;, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr&lt;rocksdb::IOTracer&gt; const&amp;, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&amp;, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::string const*, rocksdb::BlobFileCompletionCallback*, rocksdb::Version*, unsigned long*, unsigned long*, unsigned long*) [polkadot-parachain] (9,159,946 bytes, 0.75%)</title><rect x="5.3282%" y="1045" width="0.7550%" height="15" fill="rgb(0,234,32)"/><text x="5.5358%" y="1055.50"/></g><g><title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**) [polkadot-parachain] (9,159,946 bytes, 0.75%)</title><rect x="5.3282%" y="1029" width="0.7550%" height="15" fill="rgb(0,225,4)"/><text x="5.5358%" y="1039.50"/></g><g><title>rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::BasicTypedCacheInterface&lt;rocksdb::TableReader, (rocksdb::CacheEntryRole)13, rocksdb::Cache*&gt;::TypedHandle**, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature) [polkadot-parachain] (9,159,946 bytes, 0.75%)</title><rect x="5.3282%" y="1013" width="0.7550%" height="15" fill="rgb(0,228,17)"/><text x="5.5358%" y="1023.50"/></g><g><title>rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt;&gt;*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, int, bool, unsigned long, rocksdb::Temperature) [polkadot-parachain] (9,151,098 bytes, 0.75%)</title><rect x="5.3289%" y="997" width="0.7543%" height="15" fill="rgb(0,231,119)"/><text x="5.5365%" y="1007.50"/></g><g><title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*) [polkadot-parachain] (9,175,676 bytes, 0.76%)</title><rect x="5.3282%" y="1077" width="0.7563%" height="15" fill="rgb(0,212,94)"/><text x="5.5358%" y="1087.50"/></g><g><title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) [polkadot-parachain] (9,193,008 bytes, 0.76%)</title><rect x="5.3281%" y="1125" width="0.7577%" height="15" fill="rgb(0,198,80)"/><text x="5.5357%" y="1135.50"/></g><g><title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, (unsigned long)8&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) [polkadot-parachain] (9,192,352 bytes, 0.76%)</title><rect x="5.3282%" y="1109" width="0.7577%" height="15" fill="rgb(0,207,165)"/><text x="5.5358%" y="1119.50"/></g><g><title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::FlushReason, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt;&gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) [polkadot-parachain] (9,192,352 bytes, 0.76%)</title><rect x="5.3282%" y="1093" width="0.7577%" height="15" fill="rgb(0,239,175)"/><text x="5.5358%" y="1103.50"/></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) [polkadot-parachain] (74,889,178 bytes, 6.17%)</title><rect x="0.0000%" y="1157" width="6.1726%" height="15" fill="rgb(0,224,76)"/><text x="0.2076%" y="1167.50">..-parachain] </text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) [polkadot-parachain] (10,245,840 bytes, 0.84%)</title><rect x="5.3281%" y="1141" width="0.8445%" height="15" fill="rgb(0,226,33)"/><text x="5.5357%" y="1151.50"/></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) [polkadot-parachain] (74,891,970 bytes, 6.17%)</title><rect x="0.0000%" y="1173" width="6.1728%" height="15" fill="rgb(0,239,3)"/><text x="0.2076%" y="1183.50">..-parachain] </text></g><g><title>0x000071C9132DC252 [libstdc++.so.6.0.30] (74,892,233 bytes, 6.17%)</title><rect x="0.0000%" y="1189" width="6.1729%" height="15" fill="rgb(0,226,176)"/><text x="0.2076%" y="1199.50">...so.6.0.30] </text></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,835,008 bytes, 0.15%)</title><rect x="6.4918%" y="805" width="0.1512%" height="15" fill="rgb(0,216,152)"/><text x="6.6994%" y="815.50"/></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (1,838,728 bytes, 0.15%)</title><rect x="6.4918%" y="821" width="0.1516%" height="15" fill="rgb(0,236,166)"/><text x="6.6994%" y="831.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (3,670,016 bytes, 0.30%)</title><rect x="6.6433%" y="789" width="0.3025%" height="15" fill="rgb(0,225,55)"/><text x="6.8509%" y="799.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (2,752,512 bytes, 0.23%)</title><rect x="6.7190%" y="773" width="0.2269%" height="15" fill="rgb(0,201,63)"/><text x="6.9266%" y="783.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="6.8270%" y="757" width="0.1188%" height="15" fill="rgb(0,224,84)"/><text x="7.0346%" y="767.50"/></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (3,671,504 bytes, 0.30%)</title><rect x="6.6433%" y="821" width="0.3026%" height="15" fill="rgb(0,226,106)"/><text x="6.8509%" y="831.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (3,671,504 bytes, 0.30%)</title><rect x="6.6433%" y="805" width="0.3026%" height="15" fill="rgb(0,216,189)"/><text x="6.8509%" y="815.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (9,469,740 bytes, 0.78%)</title><rect x="6.1899%" y="837" width="0.7805%" height="15" fill="rgb(0,217,88)"/><text x="6.3975%" y="847.50"/></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute [polkadot-parachain] (1,394,816 bytes, 0.11%)</title><rect x="6.9904%" y="805" width="0.1150%" height="15" fill="rgb(0,194,126)"/><text x="7.1980%" y="815.50"/></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute_block [polkadot-parachain] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="789" width="0.1107%" height="15" fill="rgb(0,203,174)"/><text x="7.2022%" y="799.50"/></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute_block::{{closure}} [polkadot-parachain] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="773" width="0.1107%" height="15" fill="rgb(0,226,55)"/><text x="7.2022%" y="783.50"/></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node [polkadot-parachain] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="757" width="0.1107%" height="15" fill="rgb(0,233,24)"/><text x="7.2022%" y="767.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="741" width="0.1107%" height="15" fill="rgb(0,197,32)"/><text x="7.2022%" y="751.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="725" width="0.1107%" height="15" fill="rgb(0,212,195)"/><text x="7.2022%" y="735.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,343,488 bytes, 0.11%)</title><rect x="6.9946%" y="709" width="0.1107%" height="15" fill="rgb(0,210,112)"/><text x="7.2022%" y="719.50"/></g><g><title>&lt;&amp;mut cranelift_codegen::cursor::FuncCursor as cranelift_codegen::ir::builder::InstInserterBase&gt;::insert_built_inst [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="757" width="0.1404%" height="15" fill="rgb(0,225,126)"/><text x="7.4085%" y="767.50"/></g><g><title>cranelift_codegen::ir::layout::Layout::insert_inst [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="741" width="0.1404%" height="15" fill="rgb(0,232,133)"/><text x="7.4085%" y="751.50"/></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="725" width="0.1404%" height="15" fill="rgb(0,200,108)"/><text x="7.4085%" y="735.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="709" width="0.1404%" height="15" fill="rgb(0,213,134)"/><text x="7.4085%" y="719.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="693" width="0.1404%" height="15" fill="rgb(0,212,195)"/><text x="7.4085%" y="703.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,703,936 bytes, 0.14%)</title><rect x="7.2009%" y="677" width="0.1404%" height="15" fill="rgb(0,210,112)"/><text x="7.4085%" y="687.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.3413%" y="757" width="0.1404%" height="15" fill="rgb(0,197,32)"/><text x="7.5489%" y="767.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,703,936 bytes, 0.14%)</title><rect x="7.3413%" y="741" width="0.1404%" height="15" fill="rgb(0,212,195)"/><text x="7.5489%" y="751.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,703,936 bytes, 0.14%)</title><rect x="7.3413%" y="725" width="0.1404%" height="15" fill="rgb(0,210,112)"/><text x="7.5489%" y="735.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (5,275,648 bytes, 0.43%)</title><rect x="7.2009%" y="789" width="0.4348%" height="15" fill="rgb(0,224,74)"/><text x="7.4085%" y="799.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (5,275,648 bytes, 0.43%)</title><rect x="7.2009%" y="773" width="0.4348%" height="15" fill="rgb(0,225,11)"/><text x="7.4085%" y="783.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="7.5169%" y="757" width="0.1188%" height="15" fill="rgb(0,224,84)"/><text x="7.7245%" y="767.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (6,512,800 bytes, 0.54%)</title><rect x="7.1053%" y="805" width="0.5368%" height="15" fill="rgb(0,198,1)"/><text x="7.3129%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (17,706,536 bytes, 1.46%)</title><rect x="6.1873%" y="885" width="1.4594%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="895.50">..] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (17,706,536 bytes, 1.46%)</title><rect x="6.1873%" y="869" width="1.4594%" height="15" fill="rgb(0,217,9)"/><text x="6.3949%" y="879.50">..] </text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (17,706,536 bytes, 1.46%)</title><rect x="6.1873%" y="853" width="1.4594%" height="15" fill="rgb(0,191,209)"/><text x="6.3949%" y="863.50">..] </text></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (8,151,192 bytes, 0.67%)</title><rect x="6.9749%" y="837" width="0.6718%" height="15" fill="rgb(0,224,135)"/><text x="7.1825%" y="847.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (8,151,192 bytes, 0.67%)</title><rect x="6.9749%" y="821" width="0.6718%" height="15" fill="rgb(0,220,61)"/><text x="7.1825%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (18,668,336 bytes, 1.54%)</title><rect x="6.1873%" y="901" width="1.5387%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="911.50">..] </text></g><g><title>&lt;&amp;mut cranelift_codegen::cursor::FuncCursor as cranelift_codegen::ir::builder::InstInserterBase&gt;::insert_built_inst [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="7.9980%" y="789" width="0.1080%" height="15" fill="rgb(0,225,126)"/><text x="8.2056%" y="799.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="8.1060%" y="789" width="0.1080%" height="15" fill="rgb(0,237,126)"/><text x="8.3136%" y="799.50"/></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (3,866,624 bytes, 0.32%)</title><rect x="7.9440%" y="853" width="0.3187%" height="15" fill="rgb(0,226,106)"/><text x="8.1516%" y="863.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (3,866,624 bytes, 0.32%)</title><rect x="7.9440%" y="837" width="0.3187%" height="15" fill="rgb(0,216,189)"/><text x="8.1516%" y="847.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (3,866,624 bytes, 0.32%)</title><rect x="7.9440%" y="821" width="0.3187%" height="15" fill="rgb(0,225,55)"/><text x="8.1516%" y="831.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (3,211,264 bytes, 0.26%)</title><rect x="7.9980%" y="805" width="0.2647%" height="15" fill="rgb(0,201,63)"/><text x="8.2056%" y="815.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (6,554,272 bytes, 0.54%)</title><rect x="7.7271%" y="869" width="0.5402%" height="15" fill="rgb(0,217,88)"/><text x="7.9347%" y="879.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (1,638,400 bytes, 0.14%)</title><rect x="8.2906%" y="837" width="0.1350%" height="15" fill="rgb(0,198,1)"/><text x="8.4982%" y="847.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="8.2960%" y="821" width="0.1296%" height="15" fill="rgb(0,224,74)"/><text x="8.5036%" y="831.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="8.2960%" y="805" width="0.1296%" height="15" fill="rgb(0,225,11)"/><text x="8.5036%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (27,165,836 bytes, 2.24%)</title><rect x="6.1873%" y="917" width="2.2391%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="927.50">..n] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (8,497,500 bytes, 0.70%)</title><rect x="7.7260%" y="901" width="0.7004%" height="15" fill="rgb(0,217,9)"/><text x="7.9336%" y="911.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (8,497,500 bytes, 0.70%)</title><rect x="7.7260%" y="885" width="0.7004%" height="15" fill="rgb(0,191,209)"/><text x="7.9336%" y="895.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,919,496 bytes, 0.16%)</title><rect x="8.2682%" y="869" width="0.1582%" height="15" fill="rgb(0,224,135)"/><text x="8.4758%" y="879.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,919,496 bytes, 0.16%)</title><rect x="8.2682%" y="853" width="0.1582%" height="15" fill="rgb(0,220,61)"/><text x="8.4758%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (28,290,808 bytes, 2.33%)</title><rect x="6.1873%" y="933" width="2.3318%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="943.50">..n] </text></g><g><title>cranelift_codegen::ir::builder::InstBuilder::iconst [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="8.5206%" y="885" width="0.1296%" height="15" fill="rgb(0,217,72)"/><text x="8.7282%" y="895.50"/></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="8.5206%" y="869" width="0.1296%" height="15" fill="rgb(0,216,152)"/><text x="8.7282%" y="879.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (2,180,952 bytes, 0.18%)</title><rect x="8.5199%" y="901" width="0.1798%" height="15" fill="rgb(0,217,88)"/><text x="8.7275%" y="911.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (1,228,544 bytes, 0.10%)</title><rect x="8.7281%" y="869" width="0.1013%" height="15" fill="rgb(0,198,1)"/><text x="8.9357%" y="879.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,398,340 bytes, 0.12%)</title><rect x="8.7151%" y="885" width="0.1153%" height="15" fill="rgb(0,220,61)"/><text x="8.9227%" y="895.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,678,916 bytes, 0.14%)</title><rect x="8.7001%" y="901" width="0.1384%" height="15" fill="rgb(0,224,135)"/><text x="8.9077%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (32,165,384 bytes, 2.65%)</title><rect x="6.1873%" y="949" width="2.6512%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="959.50">..in] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (3,874,576 bytes, 0.32%)</title><rect x="8.5191%" y="933" width="0.3194%" height="15" fill="rgb(0,217,9)"/><text x="8.7267%" y="943.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (3,874,576 bytes, 0.32%)</title><rect x="8.5191%" y="917" width="0.3194%" height="15" fill="rgb(0,191,209)"/><text x="8.7267%" y="927.50"/></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="8.8900%" y="629" width="0.1080%" height="15" fill="rgb(0,236,166)"/><text x="9.0976%" y="639.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="8.8900%" y="613" width="0.1080%" height="15" fill="rgb(0,216,189)"/><text x="9.0976%" y="623.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="8.8900%" y="597" width="0.1080%" height="15" fill="rgb(0,225,55)"/><text x="9.0976%" y="607.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="8.8900%" y="581" width="0.1080%" height="15" fill="rgb(0,201,63)"/><text x="9.0976%" y="591.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (1,437,488 bytes, 0.12%)</title><rect x="8.8803%" y="645" width="0.1185%" height="15" fill="rgb(0,217,88)"/><text x="9.0879%" y="655.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,367,128 bytes, 0.11%)</title><rect x="8.9988%" y="645" width="0.1127%" height="15" fill="rgb(0,224,135)"/><text x="9.2064%" y="655.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,804,792 bytes, 0.23%)</title><rect x="8.8803%" y="741" width="0.2312%" height="15" fill="rgb(0,222,90)"/><text x="9.0879%" y="751.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,804,664 bytes, 0.23%)</title><rect x="8.8803%" y="725" width="0.2312%" height="15" fill="rgb(0,211,162)"/><text x="9.0879%" y="735.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,804,664 bytes, 0.23%)</title><rect x="8.8803%" y="709" width="0.2312%" height="15" fill="rgb(0,214,57)"/><text x="9.0879%" y="719.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,804,664 bytes, 0.23%)</title><rect x="8.8803%" y="693" width="0.2312%" height="15" fill="rgb(0,229,43)"/><text x="9.0879%" y="703.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,804,664 bytes, 0.23%)</title><rect x="8.8803%" y="677" width="0.2312%" height="15" fill="rgb(0,217,9)"/><text x="9.0879%" y="687.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,804,664 bytes, 0.23%)</title><rect x="8.8803%" y="661" width="0.2312%" height="15" fill="rgb(0,191,209)"/><text x="9.0879%" y="671.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (4,311,708 bytes, 0.36%)</title><rect x="8.8385%" y="885" width="0.3554%" height="15" fill="rgb(0,229,43)"/><text x="9.0461%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (4,311,708 bytes, 0.36%)</title><rect x="8.8385%" y="869" width="0.3554%" height="15" fill="rgb(0,222,90)"/><text x="9.0461%" y="879.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="853" width="0.3136%" height="15" fill="rgb(0,211,162)"/><text x="9.0879%" y="863.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="837" width="0.3136%" height="15" fill="rgb(0,214,57)"/><text x="9.0879%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="821" width="0.3136%" height="15" fill="rgb(0,229,43)"/><text x="9.0879%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="805" width="0.3136%" height="15" fill="rgb(0,222,90)"/><text x="9.0879%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="789" width="0.3136%" height="15" fill="rgb(0,229,43)"/><text x="9.0879%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="773" width="0.3136%" height="15" fill="rgb(0,222,90)"/><text x="9.0879%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,804,468 bytes, 0.31%)</title><rect x="8.8803%" y="757" width="0.3136%" height="15" fill="rgb(0,229,43)"/><text x="9.0879%" y="767.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="9.2162%" y="661" width="0.1188%" height="15" fill="rgb(0,220,61)"/><text x="9.4238%" y="671.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="9.2162%" y="645" width="0.1188%" height="15" fill="rgb(0,198,1)"/><text x="9.4238%" y="655.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="9.2162%" y="629" width="0.1188%" height="15" fill="rgb(0,224,74)"/><text x="9.4238%" y="639.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,441,792 bytes, 0.12%)</title><rect x="9.2162%" y="613" width="0.1188%" height="15" fill="rgb(0,225,11)"/><text x="9.4238%" y="623.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,592,320 bytes, 0.13%)</title><rect x="9.2079%" y="677" width="0.1312%" height="15" fill="rgb(0,224,135)"/><text x="9.4155%" y="687.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,762,528 bytes, 0.15%)</title><rect x="9.1939%" y="741" width="0.1453%" height="15" fill="rgb(0,222,90)"/><text x="9.4015%" y="751.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,762,528 bytes, 0.15%)</title><rect x="9.1939%" y="725" width="0.1453%" height="15" fill="rgb(0,229,43)"/><text x="9.4015%" y="735.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,762,528 bytes, 0.15%)</title><rect x="9.1939%" y="709" width="0.1453%" height="15" fill="rgb(0,217,9)"/><text x="9.4015%" y="719.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,762,528 bytes, 0.15%)</title><rect x="9.1939%" y="693" width="0.1453%" height="15" fill="rgb(0,191,209)"/><text x="9.4015%" y="703.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (6,074,364 bytes, 0.50%)</title><rect x="8.8385%" y="901" width="0.5007%" height="15" fill="rgb(0,222,90)"/><text x="9.0461%" y="911.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="885" width="0.1453%" height="15" fill="rgb(0,211,162)"/><text x="9.4015%" y="895.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="869" width="0.1453%" height="15" fill="rgb(0,214,57)"/><text x="9.4015%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="853" width="0.1453%" height="15" fill="rgb(0,229,43)"/><text x="9.4015%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="837" width="0.1453%" height="15" fill="rgb(0,222,90)"/><text x="9.4015%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="821" width="0.1453%" height="15" fill="rgb(0,229,43)"/><text x="9.4015%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="805" width="0.1453%" height="15" fill="rgb(0,222,90)"/><text x="9.4015%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="789" width="0.1453%" height="15" fill="rgb(0,229,43)"/><text x="9.4015%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="773" width="0.1453%" height="15" fill="rgb(0,222,90)"/><text x="9.4015%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,762,656 bytes, 0.15%)</title><rect x="9.1939%" y="757" width="0.1453%" height="15" fill="rgb(0,229,43)"/><text x="9.4015%" y="767.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (38,265,952 bytes, 3.15%)</title><rect x="6.1873%" y="965" width="3.1540%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="975.50">..ain] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (6,100,568 bytes, 0.50%)</title><rect x="8.8385%" y="949" width="0.5028%" height="15" fill="rgb(0,211,162)"/><text x="9.0461%" y="959.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (6,100,568 bytes, 0.50%)</title><rect x="8.8385%" y="933" width="0.5028%" height="15" fill="rgb(0,214,57)"/><text x="9.0461%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (6,100,568 bytes, 0.50%)</title><rect x="8.8385%" y="917" width="0.5028%" height="15" fill="rgb(0,229,43)"/><text x="9.0461%" y="927.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (39,780,678 bytes, 3.28%)</title><rect x="6.1873%" y="981" width="3.2789%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="991.50">..ain] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,514,726 bytes, 0.12%)</title><rect x="9.3413%" y="965" width="0.1248%" height="15" fill="rgb(0,217,9)"/><text x="9.5489%" y="975.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,514,726 bytes, 0.12%)</title><rect x="9.3413%" y="949" width="0.1248%" height="15" fill="rgb(0,191,209)"/><text x="9.5489%" y="959.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (40,072,254 bytes, 3.30%)</title><rect x="6.1873%" y="997" width="3.3029%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="1007.50">..ain] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (40,098,082 bytes, 3.31%)</title><rect x="6.1873%" y="1013" width="3.3050%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="1023.50">..ain] </text></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="9.5243%" y="693" width="0.1080%" height="15" fill="rgb(0,226,106)"/><text x="9.7319%" y="703.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="9.5243%" y="677" width="0.1080%" height="15" fill="rgb(0,216,189)"/><text x="9.7319%" y="687.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="9.5243%" y="661" width="0.1080%" height="15" fill="rgb(0,225,55)"/><text x="9.7319%" y="671.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="9.5243%" y="645" width="0.1080%" height="15" fill="rgb(0,201,63)"/><text x="9.7319%" y="655.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (1,769,912 bytes, 0.15%)</title><rect x="9.4925%" y="709" width="0.1459%" height="15" fill="rgb(0,217,88)"/><text x="9.7001%" y="719.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="805" width="0.2417%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="789" width="0.2417%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="773" width="0.2417%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="757" width="0.2417%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="767.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="741" width="0.2417%" height="15" fill="rgb(0,217,9)"/><text x="9.6999%" y="751.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,932,644 bytes, 0.24%)</title><rect x="9.4923%" y="725" width="0.2417%" height="15" fill="rgb(0,191,209)"/><text x="9.6999%" y="735.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="9.7707%" y="741" width="0.1729%" height="15" fill="rgb(0,198,1)"/><text x="9.9783%" y="751.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="9.7815%" y="725" width="0.1621%" height="15" fill="rgb(0,224,74)"/><text x="9.9891%" y="735.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="9.7815%" y="709" width="0.1621%" height="15" fill="rgb(0,225,11)"/><text x="9.9891%" y="719.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,482,860 bytes, 0.45%)</title><rect x="9.4923%" y="821" width="0.4519%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="831.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,550,216 bytes, 0.21%)</title><rect x="9.7340%" y="805" width="0.2102%" height="15" fill="rgb(0,217,9)"/><text x="9.9416%" y="815.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,550,216 bytes, 0.21%)</title><rect x="9.7340%" y="789" width="0.2102%" height="15" fill="rgb(0,191,209)"/><text x="9.9416%" y="799.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (2,409,104 bytes, 0.20%)</title><rect x="9.7457%" y="773" width="0.1986%" height="15" fill="rgb(0,224,135)"/><text x="9.9533%" y="783.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (2,409,104 bytes, 0.20%)</title><rect x="9.7457%" y="757" width="0.1986%" height="15" fill="rgb(0,220,61)"/><text x="9.9533%" y="767.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (5,500,536 bytes, 0.45%)</title><rect x="9.4923%" y="837" width="0.4534%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,501,064 bytes, 0.45%)</title><rect x="9.4923%" y="853" width="0.4534%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (5,582,644 bytes, 0.46%)</title><rect x="9.4923%" y="869" width="0.4601%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="879.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (5,583,280 bytes, 0.46%)</title><rect x="9.4923%" y="901" width="0.4602%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,583,280 bytes, 0.46%)</title><rect x="9.4923%" y="885" width="0.4602%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="895.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,583,864 bytes, 0.46%)</title><rect x="9.4923%" y="917" width="0.4602%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="927.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="693" width="0.1419%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="703.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="677" width="0.1419%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="687.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="661" width="0.1419%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="671.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="645" width="0.1419%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="655.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="629" width="0.1419%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="639.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="613" width="0.1419%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="623.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="597" width="0.1419%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="607.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="581" width="0.1419%" height="15" fill="rgb(0,217,9)"/><text x="10.2252%" y="591.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,721,080 bytes, 0.14%)</title><rect x="10.0176%" y="565" width="0.1419%" height="15" fill="rgb(0,191,209)"/><text x="10.2252%" y="575.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="10.0514%" y="549" width="0.1080%" height="15" fill="rgb(0,224,135)"/><text x="10.2590%" y="559.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="10.0514%" y="533" width="0.1080%" height="15" fill="rgb(0,220,61)"/><text x="10.2590%" y="543.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="10.0514%" y="517" width="0.1080%" height="15" fill="rgb(0,198,1)"/><text x="10.2590%" y="527.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,445,012 bytes, 0.20%)</title><rect x="10.0176%" y="741" width="0.2015%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="751.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,445,012 bytes, 0.20%)</title><rect x="10.0176%" y="725" width="0.2015%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="735.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,445,012 bytes, 0.20%)</title><rect x="10.0176%" y="709" width="0.2015%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="719.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,253,908 bytes, 0.27%)</title><rect x="9.9525%" y="853" width="0.2682%" height="15" fill="rgb(0,229,43)"/><text x="10.1601%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,253,908 bytes, 0.27%)</title><rect x="9.9525%" y="837" width="0.2682%" height="15" fill="rgb(0,222,90)"/><text x="10.1601%" y="847.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,465,080 bytes, 0.20%)</title><rect x="10.0176%" y="821" width="0.2032%" height="15" fill="rgb(0,211,162)"/><text x="10.2252%" y="831.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,465,080 bytes, 0.20%)</title><rect x="10.0176%" y="805" width="0.2032%" height="15" fill="rgb(0,214,57)"/><text x="10.2252%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,465,080 bytes, 0.20%)</title><rect x="10.0176%" y="789" width="0.2032%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,465,080 bytes, 0.20%)</title><rect x="10.0176%" y="773" width="0.2032%" height="15" fill="rgb(0,222,90)"/><text x="10.2252%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,465,080 bytes, 0.20%)</title><rect x="10.0176%" y="757" width="0.2032%" height="15" fill="rgb(0,229,43)"/><text x="10.2252%" y="767.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (1,349,028 bytes, 0.11%)</title><rect x="10.2410%" y="613" width="0.1112%" height="15" fill="rgb(0,217,88)"/><text x="10.4486%" y="623.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (5,357,084 bytes, 0.44%)</title><rect x="9.9525%" y="869" width="0.4415%" height="15" fill="rgb(0,222,90)"/><text x="10.1601%" y="879.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,103,176 bytes, 0.17%)</title><rect x="10.2207%" y="853" width="0.1734%" height="15" fill="rgb(0,211,162)"/><text x="10.4283%" y="863.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,103,176 bytes, 0.17%)</title><rect x="10.2207%" y="837" width="0.1734%" height="15" fill="rgb(0,214,57)"/><text x="10.4283%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,103,176 bytes, 0.17%)</title><rect x="10.2207%" y="821" width="0.1734%" height="15" fill="rgb(0,229,43)"/><text x="10.4283%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,103,176 bytes, 0.17%)</title><rect x="10.2207%" y="805" width="0.1734%" height="15" fill="rgb(0,222,90)"/><text x="10.4283%" y="815.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="789" width="0.1533%" height="15" fill="rgb(0,211,162)"/><text x="10.4484%" y="799.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="773" width="0.1533%" height="15" fill="rgb(0,214,57)"/><text x="10.4484%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="757" width="0.1533%" height="15" fill="rgb(0,229,43)"/><text x="10.4484%" y="767.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="741" width="0.1533%" height="15" fill="rgb(0,222,90)"/><text x="10.4484%" y="751.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="725" width="0.1533%" height="15" fill="rgb(0,229,43)"/><text x="10.4484%" y="735.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="709" width="0.1533%" height="15" fill="rgb(0,222,90)"/><text x="10.4484%" y="719.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="693" width="0.1533%" height="15" fill="rgb(0,229,43)"/><text x="10.4484%" y="703.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="677" width="0.1533%" height="15" fill="rgb(0,222,90)"/><text x="10.4484%" y="687.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="661" width="0.1533%" height="15" fill="rgb(0,229,43)"/><text x="10.4484%" y="671.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="645" width="0.1533%" height="15" fill="rgb(0,217,9)"/><text x="10.4484%" y="655.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,859,716 bytes, 0.15%)</title><rect x="10.2408%" y="629" width="0.1533%" height="15" fill="rgb(0,191,209)"/><text x="10.4484%" y="639.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,011,064 bytes, 0.91%)</title><rect x="9.4923%" y="949" width="0.9076%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="959.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (11,011,064 bytes, 0.91%)</title><rect x="9.4923%" y="933" width="0.9076%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="943.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (5,427,200 bytes, 0.45%)</title><rect x="9.9525%" y="917" width="0.4473%" height="15" fill="rgb(0,211,162)"/><text x="10.1601%" y="927.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (5,427,200 bytes, 0.45%)</title><rect x="9.9525%" y="901" width="0.4473%" height="15" fill="rgb(0,214,57)"/><text x="10.1601%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,427,200 bytes, 0.45%)</title><rect x="9.9525%" y="885" width="0.4473%" height="15" fill="rgb(0,229,43)"/><text x="10.1601%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (51,153,994 bytes, 4.22%)</title><rect x="6.1873%" y="1029" width="4.2163%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="1039.50">..achain] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (11,055,912 bytes, 0.91%)</title><rect x="9.4923%" y="1013" width="0.9113%" height="15" fill="rgb(0,211,162)"/><text x="9.6999%" y="1023.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (11,055,912 bytes, 0.91%)</title><rect x="9.4923%" y="997" width="0.9113%" height="15" fill="rgb(0,214,57)"/><text x="9.6999%" y="1007.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,055,912 bytes, 0.91%)</title><rect x="9.4923%" y="981" width="0.9113%" height="15" fill="rgb(0,229,43)"/><text x="9.6999%" y="991.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (11,055,912 bytes, 0.91%)</title><rect x="9.4923%" y="965" width="0.9113%" height="15" fill="rgb(0,222,90)"/><text x="9.6999%" y="975.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (52,066,146 bytes, 4.29%)</title><rect x="6.1873%" y="1045" width="4.2915%" height="15" fill="rgb(0,229,43)"/><text x="6.3949%" y="1055.50">..achain] </text></g><g><title>cranelift_codegen::ir::builder::InstBuilder::iconst [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="725" width="0.1296%" height="15" fill="rgb(0,217,72)"/><text x="10.6882%" y="735.50"/></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="709" width="0.1296%" height="15" fill="rgb(0,216,152)"/><text x="10.6882%" y="719.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="693" width="0.1296%" height="15" fill="rgb(0,224,84)"/><text x="10.6882%" y="703.50"/></g><g><title>cranelift_entity::list::EntityList&lt;T&gt;::push [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="677" width="0.1296%" height="15" fill="rgb(0,197,140)"/><text x="10.6882%" y="687.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="661" width="0.1296%" height="15" fill="rgb(0,213,134)"/><text x="10.6882%" y="671.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="645" width="0.1296%" height="15" fill="rgb(0,212,195)"/><text x="10.6882%" y="655.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,572,864 bytes, 0.13%)</title><rect x="10.4806%" y="629" width="0.1296%" height="15" fill="rgb(0,210,112)"/><text x="10.6882%" y="639.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (2,150,692 bytes, 0.18%)</title><rect x="10.4792%" y="741" width="0.1773%" height="15" fill="rgb(0,217,88)"/><text x="10.6868%" y="751.50"/></g><g><title>&lt;&amp;mut cranelift_codegen::cursor::FuncCursor as cranelift_codegen::ir::builder::InstInserterBase&gt;::insert_built_inst [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="661" width="0.2161%" height="15" fill="rgb(0,225,126)"/><text x="10.9860%" y="671.50"/></g><g><title>cranelift_codegen::ir::layout::Layout::insert_inst [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="645" width="0.2161%" height="15" fill="rgb(0,232,133)"/><text x="10.9860%" y="655.50"/></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="629" width="0.2161%" height="15" fill="rgb(0,200,108)"/><text x="10.9860%" y="639.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="613" width="0.2161%" height="15" fill="rgb(0,213,134)"/><text x="10.9860%" y="623.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="597" width="0.2161%" height="15" fill="rgb(0,212,195)"/><text x="10.9860%" y="607.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,621,440 bytes, 0.22%)</title><rect x="10.7784%" y="581" width="0.2161%" height="15" fill="rgb(0,210,112)"/><text x="10.9860%" y="591.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.9945%" y="661" width="0.2161%" height="15" fill="rgb(0,197,32)"/><text x="11.2021%" y="671.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="10.9945%" y="645" width="0.2161%" height="15" fill="rgb(0,212,195)"/><text x="11.2021%" y="655.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,621,440 bytes, 0.22%)</title><rect x="10.9945%" y="629" width="0.2161%" height="15" fill="rgb(0,210,112)"/><text x="11.2021%" y="639.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (8,072,176 bytes, 0.67%)</title><rect x="10.7073%" y="709" width="0.6653%" height="15" fill="rgb(0,198,1)"/><text x="10.9149%" y="719.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (7,208,960 bytes, 0.59%)</title><rect x="10.7784%" y="693" width="0.5942%" height="15" fill="rgb(0,224,74)"/><text x="10.9860%" y="703.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (7,208,960 bytes, 0.59%)</title><rect x="10.7784%" y="677" width="0.5942%" height="15" fill="rgb(0,225,11)"/><text x="10.9860%" y="687.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="11.2646%" y="661" width="0.1080%" height="15" fill="rgb(0,224,84)"/><text x="11.4722%" y="671.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="11.2646%" y="645" width="0.1080%" height="15" fill="rgb(0,197,32)"/><text x="11.4722%" y="655.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="11.2646%" y="629" width="0.1080%" height="15" fill="rgb(0,212,195)"/><text x="11.4722%" y="639.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,310,720 bytes, 0.11%)</title><rect x="11.2646%" y="613" width="0.1080%" height="15" fill="rgb(0,210,112)"/><text x="11.4722%" y="623.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (8,245,872 bytes, 0.68%)</title><rect x="10.6937%" y="725" width="0.6797%" height="15" fill="rgb(0,220,61)"/><text x="10.9013%" y="735.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (9,081,456 bytes, 0.75%)</title><rect x="10.6573%" y="741" width="0.7485%" height="15" fill="rgb(0,224,135)"/><text x="10.8649%" y="751.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (11,247,574 bytes, 0.93%)</title><rect x="10.4787%" y="805" width="0.9271%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,247,574 bytes, 0.93%)</title><rect x="10.4787%" y="789" width="0.9271%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="799.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (11,247,574 bytes, 0.93%)</title><rect x="10.4787%" y="773" width="0.9271%" height="15" fill="rgb(0,217,9)"/><text x="10.6863%" y="783.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (11,247,574 bytes, 0.93%)</title><rect x="10.4787%" y="757" width="0.9271%" height="15" fill="rgb(0,191,209)"/><text x="10.6863%" y="767.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,253,742 bytes, 0.93%)</title><rect x="10.4787%" y="821" width="0.9276%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (11,290,630 bytes, 0.93%)</title><rect x="10.4787%" y="837" width="0.9306%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="847.50"/></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="789" width="0.1296%" height="15" fill="rgb(0,236,166)"/><text x="11.6472%" y="799.50"/></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="773" width="0.1296%" height="15" fill="rgb(0,216,152)"/><text x="11.6472%" y="783.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="757" width="0.1296%" height="15" fill="rgb(0,224,84)"/><text x="11.6472%" y="767.50"/></g><g><title>cranelift_entity::list::EntityList&lt;T&gt;::push [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="741" width="0.1296%" height="15" fill="rgb(0,197,140)"/><text x="11.6472%" y="751.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="725" width="0.1296%" height="15" fill="rgb(0,213,134)"/><text x="11.6472%" y="735.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="709" width="0.1296%" height="15" fill="rgb(0,212,195)"/><text x="11.6472%" y="719.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (1,572,864 bytes, 0.13%)</title><rect x="11.4396%" y="693" width="0.1296%" height="15" fill="rgb(0,210,112)"/><text x="11.6472%" y="703.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (3,052,224 bytes, 0.25%)</title><rect x="11.4110%" y="805" width="0.2516%" height="15" fill="rgb(0,217,88)"/><text x="11.6186%" y="815.50"/></g><g><title>&lt;&amp;mut cranelift_codegen::cursor::FuncCursor as cranelift_codegen::ir::builder::InstInserterBase&gt;::insert_built_inst [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="725" width="0.1729%" height="15" fill="rgb(0,225,126)"/><text x="11.9283%" y="735.50"/></g><g><title>cranelift_codegen::ir::layout::Layout::insert_inst [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="709" width="0.1729%" height="15" fill="rgb(0,232,133)"/><text x="11.9283%" y="719.50"/></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="693" width="0.1729%" height="15" fill="rgb(0,200,108)"/><text x="11.9283%" y="703.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="677" width="0.1729%" height="15" fill="rgb(0,213,134)"/><text x="11.9283%" y="687.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="661" width="0.1729%" height="15" fill="rgb(0,212,195)"/><text x="11.9283%" y="671.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,097,152 bytes, 0.17%)</title><rect x="11.7207%" y="645" width="0.1729%" height="15" fill="rgb(0,210,112)"/><text x="11.9283%" y="655.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.8936%" y="725" width="0.1729%" height="15" fill="rgb(0,197,32)"/><text x="12.1012%" y="735.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="11.8936%" y="709" width="0.1729%" height="15" fill="rgb(0,212,195)"/><text x="12.1012%" y="719.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,097,152 bytes, 0.17%)</title><rect x="11.8936%" y="693" width="0.1729%" height="15" fill="rgb(0,210,112)"/><text x="12.1012%" y="703.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (5,767,168 bytes, 0.48%)</title><rect x="11.7207%" y="773" width="0.4753%" height="15" fill="rgb(0,198,1)"/><text x="11.9283%" y="783.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (5,767,168 bytes, 0.48%)</title><rect x="11.7207%" y="757" width="0.4753%" height="15" fill="rgb(0,224,74)"/><text x="11.9283%" y="767.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (5,767,168 bytes, 0.48%)</title><rect x="11.7207%" y="741" width="0.4753%" height="15" fill="rgb(0,225,11)"/><text x="11.9283%" y="751.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (6,008,852 bytes, 0.50%)</title><rect x="11.7013%" y="789" width="0.4953%" height="15" fill="rgb(0,220,61)"/><text x="11.9089%" y="799.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (6,656,020 bytes, 0.55%)</title><rect x="11.6641%" y="805" width="0.5486%" height="15" fill="rgb(0,224,135)"/><text x="11.8717%" y="815.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (21,037,771 bytes, 1.73%)</title><rect x="10.4787%" y="869" width="1.7340%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="879.50">..] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (21,037,771 bytes, 1.73%)</title><rect x="10.4787%" y="853" width="1.7340%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="863.50">..] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (9,747,141 bytes, 0.80%)</title><rect x="11.4094%" y="837" width="0.8034%" height="15" fill="rgb(0,217,9)"/><text x="11.6170%" y="847.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (9,747,141 bytes, 0.80%)</title><rect x="11.4094%" y="821" width="0.8034%" height="15" fill="rgb(0,191,209)"/><text x="11.6170%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (21,526,251 bytes, 1.77%)</title><rect x="10.4787%" y="901" width="1.7743%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="911.50">..] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (21,526,251 bytes, 1.77%)</title><rect x="10.4787%" y="885" width="1.7743%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="895.50">..] </text></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="853" width="0.2053%" height="15" fill="rgb(0,236,166)"/><text x="12.5489%" y="863.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="837" width="0.2053%" height="15" fill="rgb(0,216,189)"/><text x="12.5489%" y="847.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="821" width="0.2053%" height="15" fill="rgb(0,225,55)"/><text x="12.5489%" y="831.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="805" width="0.2053%" height="15" fill="rgb(0,201,63)"/><text x="12.5489%" y="815.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst_results [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="789" width="0.2053%" height="15" fill="rgb(0,224,84)"/><text x="12.5489%" y="799.50"/></g><g><title>cranelift_entity::list::EntityList&lt;T&gt;::push [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="773" width="0.2053%" height="15" fill="rgb(0,197,140)"/><text x="12.5489%" y="783.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="757" width="0.2053%" height="15" fill="rgb(0,213,134)"/><text x="12.5489%" y="767.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="741" width="0.2053%" height="15" fill="rgb(0,212,195)"/><text x="12.5489%" y="751.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,490,368 bytes, 0.21%)</title><rect x="12.3413%" y="725" width="0.2053%" height="15" fill="rgb(0,210,112)"/><text x="12.5489%" y="735.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.5466%" y="805" width="0.1729%" height="15" fill="rgb(0,197,32)"/><text x="12.7542%" y="815.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.5466%" y="789" width="0.1729%" height="15" fill="rgb(0,212,195)"/><text x="12.7542%" y="799.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,097,152 bytes, 0.17%)</title><rect x="12.5466%" y="773" width="0.1729%" height="15" fill="rgb(0,210,112)"/><text x="12.7542%" y="783.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst [polkadot-parachain] (2,621,440 bytes, 0.22%)</title><rect x="12.5466%" y="821" width="0.2161%" height="15" fill="rgb(0,237,126)"/><text x="12.7542%" y="831.50"/></g><g><title>cranelift_codegen::ir::layout::Layout::append_inst [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.7626%" y="821" width="0.1729%" height="15" fill="rgb(0,231,32)"/><text x="12.9702%" y="831.50"/></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.7626%" y="805" width="0.1729%" height="15" fill="rgb(0,200,108)"/><text x="12.9702%" y="815.50"/></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.7626%" y="789" width="0.1729%" height="15" fill="rgb(0,213,134)"/><text x="12.9702%" y="799.50"/></g><g><title>alloc::raw_vec::finish_grow [polkadot-parachain] (2,097,152 bytes, 0.17%)</title><rect x="12.7626%" y="773" width="0.1729%" height="15" fill="rgb(0,212,195)"/><text x="12.9702%" y="783.50"/></g><g><title>bytehound::api::jemalloc_reallocate [libbytehound.so] (2,097,152 bytes, 0.17%)</title><rect x="12.7626%" y="757" width="0.1729%" height="15" fill="rgb(0,210,112)"/><text x="12.9702%" y="767.50"/></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (5,242,880 bytes, 0.43%)</title><rect x="12.5466%" y="853" width="0.4321%" height="15" fill="rgb(0,226,106)"/><text x="12.7542%" y="863.50"/></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (5,242,880 bytes, 0.43%)</title><rect x="12.5466%" y="837" width="0.4321%" height="15" fill="rgb(0,216,152)"/><text x="12.7542%" y="847.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (8,786,032 bytes, 0.72%)</title><rect x="12.2547%" y="869" width="0.7242%" height="15" fill="rgb(0,217,88)"/><text x="12.4623%" y="879.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,990,656 bytes, 0.16%)</title><rect x="12.9789%" y="869" width="0.1641%" height="15" fill="rgb(0,224,135)"/><text x="13.1865%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (32,323,531 bytes, 2.66%)</title><rect x="10.4787%" y="917" width="2.6642%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="927.50">..in] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (10,797,280 bytes, 0.89%)</title><rect x="12.2530%" y="901" width="0.8899%" height="15" fill="rgb(0,217,9)"/><text x="12.4606%" y="911.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (10,797,280 bytes, 0.89%)</title><rect x="12.2530%" y="885" width="0.8899%" height="15" fill="rgb(0,191,209)"/><text x="12.4606%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (33,438,855 bytes, 2.76%)</title><rect x="10.4787%" y="933" width="2.7561%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="943.50">..in] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (34,801,435 bytes, 2.87%)</title><rect x="10.4787%" y="949" width="2.8685%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="959.50">..ain] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,362,580 bytes, 0.11%)</title><rect x="13.2349%" y="933" width="0.1123%" height="15" fill="rgb(0,217,9)"/><text x="13.4425%" y="943.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,362,580 bytes, 0.11%)</title><rect x="13.2349%" y="917" width="0.1123%" height="15" fill="rgb(0,191,209)"/><text x="13.4425%" y="927.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (35,763,379 bytes, 2.95%)</title><rect x="10.4787%" y="965" width="2.9477%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="975.50">..ain] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (36,426,483 bytes, 3.00%)</title><rect x="10.4787%" y="981" width="3.0024%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="991.50">..ain] </text></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (88,546,185 bytes, 7.30%)</title><rect x="6.1873%" y="1061" width="7.2983%" height="15" fill="rgb(0,222,90)"/><text x="6.3949%" y="1071.50">..ot-parachain] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (36,480,039 bytes, 3.01%)</title><rect x="10.4787%" y="1045" width="3.0068%" height="15" fill="rgb(0,211,162)"/><text x="10.6863%" y="1055.50">..ain] </text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (36,480,039 bytes, 3.01%)</title><rect x="10.4787%" y="1029" width="3.0068%" height="15" fill="rgb(0,214,57)"/><text x="10.6863%" y="1039.50">..ain] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (36,480,039 bytes, 3.01%)</title><rect x="10.4787%" y="1013" width="3.0068%" height="15" fill="rgb(0,229,43)"/><text x="10.6863%" y="1023.50">..ain] </text></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (36,480,039 bytes, 3.01%)</title><rect x="10.4787%" y="997" width="3.0068%" height="15" fill="rgb(0,222,90)"/><text x="10.6863%" y="1007.50">..ain] </text></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="13.5187%" y="981" width="0.1296%" height="15" fill="rgb(0,225,55)"/><text x="13.7263%" y="991.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (1,572,864 bytes, 0.13%)</title><rect x="13.5187%" y="965" width="0.1296%" height="15" fill="rgb(0,201,63)"/><text x="13.7263%" y="975.50"/></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (1,573,236 bytes, 0.13%)</title><rect x="13.5187%" y="1013" width="0.1297%" height="15" fill="rgb(0,236,166)"/><text x="13.7263%" y="1023.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (1,573,236 bytes, 0.13%)</title><rect x="13.5187%" y="997" width="0.1297%" height="15" fill="rgb(0,216,189)"/><text x="13.7263%" y="1007.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (1,966,968 bytes, 0.16%)</title><rect x="13.4863%" y="1029" width="0.1621%" height="15" fill="rgb(0,217,88)"/><text x="13.6939%" y="1039.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (90,725,041 bytes, 7.48%)</title><rect x="6.1872%" y="1077" width="7.4779%" height="15" fill="rgb(0,229,43)"/><text x="6.3948%" y="1087.50">..dot-parachain] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,178,472 bytes, 0.18%)</title><rect x="13.4855%" y="1061" width="0.1796%" height="15" fill="rgb(0,217,9)"/><text x="13.6931%" y="1071.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,178,472 bytes, 0.18%)</title><rect x="13.4855%" y="1045" width="0.1796%" height="15" fill="rgb(0,191,209)"/><text x="13.6931%" y="1055.50"/></g><g><title>cranelift_codegen::ir::builder::InstBuilder::iadd [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="13.6849%" y="757" width="0.1080%" height="15" fill="rgb(0,201,105)"/><text x="13.8925%" y="767.50"/></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="13.6849%" y="741" width="0.1080%" height="15" fill="rgb(0,216,152)"/><text x="13.8925%" y="751.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (2,329,668 bytes, 0.19%)</title><rect x="13.6673%" y="773" width="0.1920%" height="15" fill="rgb(0,217,88)"/><text x="13.8749%" y="783.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (2,916,352 bytes, 0.24%)</title><rect x="13.9038%" y="725" width="0.2404%" height="15" fill="rgb(0,224,74)"/><text x="14.1114%" y="735.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (2,916,352 bytes, 0.24%)</title><rect x="13.9038%" y="709" width="0.2404%" height="15" fill="rgb(0,225,11)"/><text x="14.1114%" y="719.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (3,322,048 bytes, 0.27%)</title><rect x="13.8729%" y="741" width="0.2738%" height="15" fill="rgb(0,198,1)"/><text x="14.0805%" y="751.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (5,849,852 bytes, 0.48%)</title><rect x="13.6651%" y="837" width="0.4822%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (5,849,852 bytes, 0.48%)</title><rect x="13.6651%" y="821" width="0.4822%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="831.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (5,849,852 bytes, 0.48%)</title><rect x="13.6651%" y="805" width="0.4822%" height="15" fill="rgb(0,217,9)"/><text x="13.8727%" y="815.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (5,849,852 bytes, 0.48%)</title><rect x="13.6651%" y="789" width="0.4822%" height="15" fill="rgb(0,191,209)"/><text x="13.8727%" y="799.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (3,484,776 bytes, 0.29%)</title><rect x="13.8600%" y="773" width="0.2872%" height="15" fill="rgb(0,224,135)"/><text x="14.0676%" y="783.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (3,484,776 bytes, 0.29%)</title><rect x="13.8600%" y="757" width="0.2872%" height="15" fill="rgb(0,220,61)"/><text x="14.0676%" y="767.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (7,971,332 bytes, 0.66%)</title><rect x="13.6651%" y="853" width="0.6570%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="863.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,121,480 bytes, 0.17%)</title><rect x="14.1473%" y="837" width="0.1749%" height="15" fill="rgb(0,217,9)"/><text x="14.3549%" y="847.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,121,480 bytes, 0.17%)</title><rect x="14.1473%" y="821" width="0.1749%" height="15" fill="rgb(0,191,209)"/><text x="14.3549%" y="831.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,244,580 bytes, 0.10%)</title><rect x="14.2196%" y="805" width="0.1026%" height="15" fill="rgb(0,224,135)"/><text x="14.4272%" y="815.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,244,580 bytes, 0.10%)</title><rect x="14.2196%" y="789" width="0.1026%" height="15" fill="rgb(0,220,61)"/><text x="14.4272%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (7,979,684 bytes, 0.66%)</title><rect x="13.6651%" y="869" width="0.6577%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (9,301,368 bytes, 0.77%)</title><rect x="13.6651%" y="885" width="0.7667%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="895.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,321,684 bytes, 0.11%)</title><rect x="14.3228%" y="869" width="0.1089%" height="15" fill="rgb(0,217,9)"/><text x="14.5304%" y="879.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,321,684 bytes, 0.11%)</title><rect x="14.3228%" y="853" width="0.1089%" height="15" fill="rgb(0,191,209)"/><text x="14.5304%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (10,410,924 bytes, 0.86%)</title><rect x="13.6651%" y="901" width="0.8581%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,659,188 bytes, 0.96%)</title><rect x="13.6651%" y="917" width="0.9610%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="927.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,248,264 bytes, 0.10%)</title><rect x="14.5232%" y="901" width="0.1029%" height="15" fill="rgb(0,217,9)"/><text x="14.7308%" y="911.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,248,264 bytes, 0.10%)</title><rect x="14.5232%" y="885" width="0.1029%" height="15" fill="rgb(0,191,209)"/><text x="14.7308%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (11,938,920 bytes, 0.98%)</title><rect x="13.6651%" y="933" width="0.9840%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (11,946,196 bytes, 0.98%)</title><rect x="13.6651%" y="949" width="0.9846%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="959.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,240,536 bytes, 0.10%)</title><rect x="14.6498%" y="837" width="0.1022%" height="15" fill="rgb(0,222,90)"/><text x="14.8574%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,240,536 bytes, 0.10%)</title><rect x="14.6498%" y="821" width="0.1022%" height="15" fill="rgb(0,229,43)"/><text x="14.8574%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,240,536 bytes, 0.10%)</title><rect x="14.6498%" y="805" width="0.1022%" height="15" fill="rgb(0,222,90)"/><text x="14.8574%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,240,536 bytes, 0.10%)</title><rect x="14.6498%" y="789" width="0.1022%" height="15" fill="rgb(0,229,43)"/><text x="14.8574%" y="799.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,179,240 bytes, 0.18%)</title><rect x="14.6498%" y="853" width="0.1796%" height="15" fill="rgb(0,229,43)"/><text x="14.8574%" y="863.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,388,008 bytes, 0.20%)</title><rect x="14.6498%" y="885" width="0.1968%" height="15" fill="rgb(0,229,43)"/><text x="14.8574%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,388,008 bytes, 0.20%)</title><rect x="14.6498%" y="869" width="0.1968%" height="15" fill="rgb(0,222,90)"/><text x="14.8574%" y="879.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,418,396 bytes, 0.20%)</title><rect x="14.6498%" y="901" width="0.1993%" height="15" fill="rgb(0,222,90)"/><text x="14.8574%" y="911.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (14,449,228 bytes, 1.19%)</title><rect x="13.6651%" y="965" width="1.1910%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="975.50">.. </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,503,032 bytes, 0.21%)</title><rect x="14.6498%" y="949" width="0.2063%" height="15" fill="rgb(0,211,162)"/><text x="14.8574%" y="959.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,503,032 bytes, 0.21%)</title><rect x="14.6498%" y="933" width="0.2063%" height="15" fill="rgb(0,214,57)"/><text x="14.8574%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,503,032 bytes, 0.21%)</title><rect x="14.6498%" y="917" width="0.2063%" height="15" fill="rgb(0,229,43)"/><text x="14.8574%" y="927.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (14,634,940 bytes, 1.21%)</title><rect x="13.6651%" y="981" width="1.2063%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="991.50">.. </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,272,068 bytes, 0.10%)</title><rect x="14.8714%" y="885" width="0.1048%" height="15" fill="rgb(0,229,43)"/><text x="15.0790%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,272,068 bytes, 0.10%)</title><rect x="14.8714%" y="869" width="0.1048%" height="15" fill="rgb(0,222,90)"/><text x="15.0790%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,272,068 bytes, 0.10%)</title><rect x="14.8714%" y="853" width="0.1048%" height="15" fill="rgb(0,229,43)"/><text x="15.0790%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,324,692 bytes, 0.11%)</title><rect x="14.8714%" y="901" width="0.1092%" height="15" fill="rgb(0,222,90)"/><text x="15.0790%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,514,152 bytes, 0.12%)</title><rect x="14.8714%" y="917" width="0.1248%" height="15" fill="rgb(0,229,43)"/><text x="15.0790%" y="927.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,163,064 bytes, 0.18%)</title><rect x="14.8714%" y="933" width="0.1783%" height="15" fill="rgb(0,222,90)"/><text x="15.0790%" y="943.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (16,798,260 bytes, 1.38%)</title><rect x="13.6651%" y="997" width="1.3846%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="1007.50">..] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,163,320 bytes, 0.18%)</title><rect x="14.8714%" y="981" width="0.1783%" height="15" fill="rgb(0,211,162)"/><text x="15.0790%" y="991.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,163,320 bytes, 0.18%)</title><rect x="14.8714%" y="965" width="0.1783%" height="15" fill="rgb(0,214,57)"/><text x="15.0790%" y="975.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,163,320 bytes, 0.18%)</title><rect x="14.8714%" y="949" width="0.1783%" height="15" fill="rgb(0,229,43)"/><text x="15.0790%" y="959.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (16,875,344 bytes, 1.39%)</title><rect x="13.6651%" y="1013" width="1.3909%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="1023.50">..] </text></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,972,608 bytes, 0.16%)</title><rect x="15.0560%" y="837" width="0.1626%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,972,608 bytes, 0.16%)</title><rect x="15.0560%" y="821" width="0.1626%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,972,608 bytes, 0.16%)</title><rect x="15.0560%" y="805" width="0.1626%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,972,608 bytes, 0.16%)</title><rect x="15.0560%" y="789" width="0.1626%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="799.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,970,560 bytes, 0.16%)</title><rect x="15.0562%" y="773" width="0.1624%" height="15" fill="rgb(0,217,9)"/><text x="15.2638%" y="783.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,970,560 bytes, 0.16%)</title><rect x="15.0562%" y="757" width="0.1624%" height="15" fill="rgb(0,191,209)"/><text x="15.2638%" y="767.50"/></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="15.0566%" y="741" width="0.1621%" height="15" fill="rgb(0,224,135)"/><text x="15.2642%" y="751.50"/></g><g><title>cranelift_codegen::context::Context::optimize [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="15.0566%" y="725" width="0.1621%" height="15" fill="rgb(0,220,61)"/><text x="15.2642%" y="735.50"/></g><g><title>cranelift_codegen::legalizer::simple_legalize [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="15.0566%" y="709" width="0.1621%" height="15" fill="rgb(0,198,1)"/><text x="15.2642%" y="719.50"/></g><g><title>cranelift_codegen::legalizer::imm_const [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="15.0566%" y="693" width="0.1621%" height="15" fill="rgb(0,224,74)"/><text x="15.2642%" y="703.50"/></g><g><title>&lt;cranelift_codegen::ir::builder::InsertBuilder&lt;IIB&gt; as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build [polkadot-parachain] (1,966,080 bytes, 0.16%)</title><rect x="15.0566%" y="677" width="0.1621%" height="15" fill="rgb(0,225,11)"/><text x="15.2642%" y="687.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,972,736 bytes, 0.16%)</title><rect x="15.0560%" y="853" width="0.1626%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="863.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,320,764 bytes, 0.19%)</title><rect x="15.0560%" y="885" width="0.1913%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,320,764 bytes, 0.19%)</title><rect x="15.0560%" y="869" width="0.1913%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="879.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,368,604 bytes, 0.20%)</title><rect x="15.0560%" y="901" width="0.1952%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,402,020 bytes, 0.20%)</title><rect x="15.0560%" y="917" width="0.1980%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="927.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,420,548 bytes, 0.20%)</title><rect x="15.0560%" y="949" width="0.1995%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="959.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,420,548 bytes, 0.20%)</title><rect x="15.0560%" y="933" width="0.1995%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="943.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (20,687,720 bytes, 1.71%)</title><rect x="13.6651%" y="1029" width="1.7052%" height="15" fill="rgb(0,222,90)"/><text x="13.8727%" y="1039.50">..] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (3,812,376 bytes, 0.31%)</title><rect x="15.0560%" y="1013" width="0.3142%" height="15" fill="rgb(0,211,162)"/><text x="15.2636%" y="1023.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (3,812,376 bytes, 0.31%)</title><rect x="15.0560%" y="997" width="0.3142%" height="15" fill="rgb(0,214,57)"/><text x="15.2636%" y="1007.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,812,376 bytes, 0.31%)</title><rect x="15.0560%" y="981" width="0.3142%" height="15" fill="rgb(0,229,43)"/><text x="15.2636%" y="991.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,812,376 bytes, 0.31%)</title><rect x="15.0560%" y="965" width="0.3142%" height="15" fill="rgb(0,222,90)"/><text x="15.2636%" y="975.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="949" width="0.1147%" height="15" fill="rgb(0,211,162)"/><text x="15.4631%" y="959.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="933" width="0.1147%" height="15" fill="rgb(0,214,57)"/><text x="15.4631%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="917" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="927.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="901" width="0.1147%" height="15" fill="rgb(0,222,90)"/><text x="15.4631%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="885" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="869" width="0.1147%" height="15" fill="rgb(0,222,90)"/><text x="15.4631%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="853" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="837" width="0.1147%" height="15" fill="rgb(0,222,90)"/><text x="15.4631%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="821" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="805" width="0.1147%" height="15" fill="rgb(0,222,90)"/><text x="15.4631%" y="815.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="789" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="773" width="0.1147%" height="15" fill="rgb(0,222,90)"/><text x="15.4631%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,391,828 bytes, 0.11%)</title><rect x="15.2555%" y="757" width="0.1147%" height="15" fill="rgb(0,229,43)"/><text x="15.4631%" y="767.50"/></g><g><title>&lt;&amp;mut cranelift_codegen::cursor::FuncCursor as cranelift_codegen::ir::builder::InstInserterBase&gt;::insert_built_inst [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.4136%" y="933" width="0.1080%" height="15" fill="rgb(0,225,126)"/><text x="15.6212%" y="943.50"/></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.5216%" y="933" width="0.1080%" height="15" fill="rgb(0,237,126)"/><text x="15.7292%" y="943.50"/></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (3,407,872 bytes, 0.28%)</title><rect x="15.4136%" y="981" width="0.2809%" height="15" fill="rgb(0,226,106)"/><text x="15.6212%" y="991.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (3,407,872 bytes, 0.28%)</title><rect x="15.4136%" y="965" width="0.2809%" height="15" fill="rgb(0,216,189)"/><text x="15.6212%" y="975.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (3,407,872 bytes, 0.28%)</title><rect x="15.4136%" y="949" width="0.2809%" height="15" fill="rgb(0,225,55)"/><text x="15.6212%" y="959.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (3,934,224 bytes, 0.32%)</title><rect x="15.3703%" y="997" width="0.3243%" height="15" fill="rgb(0,217,88)"/><text x="15.5779%" y="1007.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (115,752,569 bytes, 9.54%)</title><rect x="6.1872%" y="1093" width="9.5407%" height="15" fill="rgb(0,222,90)"/><text x="6.3948%" y="1103.50">..polkadot-parachain] </text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (25,027,528 bytes, 2.06%)</title><rect x="13.6651%" y="1077" width="2.0629%" height="15" fill="rgb(0,211,162)"/><text x="13.8727%" y="1087.50">..n] </text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (25,027,528 bytes, 2.06%)</title><rect x="13.6651%" y="1061" width="2.0629%" height="15" fill="rgb(0,214,57)"/><text x="13.8727%" y="1071.50">..n] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (25,027,528 bytes, 2.06%)</title><rect x="13.6651%" y="1045" width="2.0629%" height="15" fill="rgb(0,229,43)"/><text x="13.8727%" y="1055.50">..n] </text></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (4,339,776 bytes, 0.36%)</title><rect x="15.3703%" y="1029" width="0.3577%" height="15" fill="rgb(0,217,9)"/><text x="15.5779%" y="1039.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (4,339,776 bytes, 0.36%)</title><rect x="15.3703%" y="1013" width="0.3577%" height="15" fill="rgb(0,191,209)"/><text x="15.5779%" y="1023.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (115,755,181 bytes, 9.54%)</title><rect x="6.1872%" y="1109" width="9.5409%" height="15" fill="rgb(0,229,43)"/><text x="6.3948%" y="1119.50">..polkadot-parachain] </text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,254,556 bytes, 0.10%)</title><rect x="15.7288%" y="949" width="0.1034%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="959.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,254,556 bytes, 0.10%)</title><rect x="15.7288%" y="933" width="0.1034%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,254,556 bytes, 0.10%)</title><rect x="15.7288%" y="917" width="0.1034%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="927.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,254,556 bytes, 0.10%)</title><rect x="15.7288%" y="901" width="0.1034%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="911.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="885" width="0.1027%" height="15" fill="rgb(0,211,162)"/><text x="15.9371%" y="895.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="869" width="0.1027%" height="15" fill="rgb(0,214,57)"/><text x="15.9371%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="853" width="0.1027%" height="15" fill="rgb(0,229,43)"/><text x="15.9371%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="837" width="0.1027%" height="15" fill="rgb(0,222,90)"/><text x="15.9371%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="821" width="0.1027%" height="15" fill="rgb(0,229,43)"/><text x="15.9371%" y="831.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,246,512 bytes, 0.10%)</title><rect x="15.7295%" y="805" width="0.1027%" height="15" fill="rgb(0,222,90)"/><text x="15.9371%" y="815.50"/></g><g><title>cranelift_wasm::code_translator::translate_store [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.8662%" y="757" width="0.1080%" height="15" fill="rgb(0,226,106)"/><text x="16.0738%" y="767.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.8662%" y="741" width="0.1080%" height="15" fill="rgb(0,216,189)"/><text x="16.0738%" y="751.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.8662%" y="725" width="0.1080%" height="15" fill="rgb(0,225,55)"/><text x="16.0738%" y="735.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="15.8662%" y="709" width="0.1080%" height="15" fill="rgb(0,201,63)"/><text x="16.0738%" y="719.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (1,763,960 bytes, 0.15%)</title><rect x="15.8322%" y="773" width="0.1454%" height="15" fill="rgb(0,217,88)"/><text x="16.0398%" y="783.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,330,872 bytes, 0.19%)</title><rect x="15.8322%" y="821" width="0.1921%" height="15" fill="rgb(0,229,43)"/><text x="16.0398%" y="831.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,330,872 bytes, 0.19%)</title><rect x="15.8322%" y="805" width="0.1921%" height="15" fill="rgb(0,217,9)"/><text x="16.0398%" y="815.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,330,872 bytes, 0.19%)</title><rect x="15.8322%" y="789" width="0.1921%" height="15" fill="rgb(0,191,209)"/><text x="16.0398%" y="799.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,802,760 bytes, 0.31%)</title><rect x="15.7281%" y="1109" width="0.3134%" height="15" fill="rgb(0,222,90)"/><text x="15.9357%" y="1119.50"/></g><g><title>wasmtime::module::Module::build_artifacts::{{closure}} [polkadot-parachain] (3,802,760 bytes, 0.31%)</title><rect x="15.7281%" y="1093" width="0.3134%" height="15" fill="rgb(0,235,49)"/><text x="15.9357%" y="1103.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="1077" width="0.3128%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="1087.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="1061" width="0.3128%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="1071.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="1045" width="0.3128%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="1055.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="1029" width="0.3128%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="1039.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="1013" width="0.3128%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="1023.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="997" width="0.3128%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="1007.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="981" width="0.3128%" height="15" fill="rgb(0,229,43)"/><text x="15.9364%" y="991.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (3,794,652 bytes, 0.31%)</title><rect x="15.7288%" y="965" width="0.3128%" height="15" fill="rgb(0,222,90)"/><text x="15.9364%" y="975.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="949" width="0.2094%" height="15" fill="rgb(0,211,162)"/><text x="16.0398%" y="959.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="933" width="0.2094%" height="15" fill="rgb(0,214,57)"/><text x="16.0398%" y="943.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="917" width="0.2094%" height="15" fill="rgb(0,229,43)"/><text x="16.0398%" y="927.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="901" width="0.2094%" height="15" fill="rgb(0,222,90)"/><text x="16.0398%" y="911.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="885" width="0.2094%" height="15" fill="rgb(0,229,43)"/><text x="16.0398%" y="895.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="869" width="0.2094%" height="15" fill="rgb(0,222,90)"/><text x="16.0398%" y="879.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="853" width="0.2094%" height="15" fill="rgb(0,229,43)"/><text x="16.0398%" y="863.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,540,096 bytes, 0.21%)</title><rect x="15.8322%" y="837" width="0.2094%" height="15" fill="rgb(0,222,90)"/><text x="16.0398%" y="847.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="165" width="0.1097%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="175.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="149" width="0.1097%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="159.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="133" width="0.1097%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="143.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="117" width="0.1097%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="127.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="101" width="0.1097%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="111.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="85" width="0.1097%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="95.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="69" width="0.1097%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="79.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="53" width="0.1097%" height="15" fill="rgb(0,217,9)"/><text x="16.2523%" y="63.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (1,331,504 bytes, 0.11%)</title><rect x="16.0447%" y="37" width="0.1097%" height="15" fill="rgb(0,191,209)"/><text x="16.2523%" y="47.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="581" width="0.1129%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="591.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="565" width="0.1129%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="575.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="549" width="0.1129%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="559.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="533" width="0.1129%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="543.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="517" width="0.1129%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="527.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,369,368 bytes, 0.11%)</title><rect x="16.0416%" y="501" width="0.1129%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="511.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="485" width="0.1098%" height="15" fill="rgb(0,211,162)"/><text x="16.2523%" y="495.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="469" width="0.1098%" height="15" fill="rgb(0,214,57)"/><text x="16.2523%" y="479.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="453" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="463.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="437" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="447.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="421" width="0.1098%" height="15" fill="rgb(0,211,162)"/><text x="16.2523%" y="431.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="405" width="0.1098%" height="15" fill="rgb(0,214,57)"/><text x="16.2523%" y="415.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="389" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="399.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="373" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="383.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="357" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="367.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="341" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="351.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="325" width="0.1098%" height="15" fill="rgb(0,211,162)"/><text x="16.2523%" y="335.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="309" width="0.1098%" height="15" fill="rgb(0,214,57)"/><text x="16.2523%" y="319.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="293" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="303.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="277" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="287.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="261" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="271.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="245" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="255.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="229" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="239.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="213" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="223.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="197" width="0.1098%" height="15" fill="rgb(0,229,43)"/><text x="16.2523%" y="207.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,331,632 bytes, 0.11%)</title><rect x="16.0447%" y="181" width="0.1098%" height="15" fill="rgb(0,222,90)"/><text x="16.2523%" y="191.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,868 bytes, 0.11%)</title><rect x="16.0416%" y="997" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="1007.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,868 bytes, 0.11%)</title><rect x="16.0416%" y="981" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="991.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,370,804 bytes, 0.11%)</title><rect x="16.0416%" y="965" width="0.1130%" height="15" fill="rgb(0,211,162)"/><text x="16.2492%" y="975.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,370,804 bytes, 0.11%)</title><rect x="16.0416%" y="949" width="0.1130%" height="15" fill="rgb(0,214,57)"/><text x="16.2492%" y="959.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,804 bytes, 0.11%)</title><rect x="16.0416%" y="933" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="943.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,804 bytes, 0.11%)</title><rect x="16.0416%" y="917" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="927.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="901" width="0.1130%" height="15" fill="rgb(0,211,162)"/><text x="16.2492%" y="911.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="885" width="0.1130%" height="15" fill="rgb(0,214,57)"/><text x="16.2492%" y="895.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="869" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="879.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="853" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="863.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="837" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="847.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="821" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="831.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="805" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="815.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,772 bytes, 0.11%)</title><rect x="16.0416%" y="789" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="799.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,370,400 bytes, 0.11%)</title><rect x="16.0416%" y="773" width="0.1130%" height="15" fill="rgb(0,211,162)"/><text x="16.2492%" y="783.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,370,400 bytes, 0.11%)</title><rect x="16.0416%" y="757" width="0.1130%" height="15" fill="rgb(0,214,57)"/><text x="16.2492%" y="767.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,400 bytes, 0.11%)</title><rect x="16.0416%" y="741" width="0.1130%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="751.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,400 bytes, 0.11%)</title><rect x="16.0416%" y="725" width="0.1130%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="735.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,370,136 bytes, 0.11%)</title><rect x="16.0416%" y="709" width="0.1129%" height="15" fill="rgb(0,211,162)"/><text x="16.2492%" y="719.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,370,136 bytes, 0.11%)</title><rect x="16.0416%" y="693" width="0.1129%" height="15" fill="rgb(0,214,57)"/><text x="16.2492%" y="703.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,136 bytes, 0.11%)</title><rect x="16.0416%" y="677" width="0.1129%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="687.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,136 bytes, 0.11%)</title><rect x="16.0416%" y="661" width="0.1129%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="671.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (1,370,104 bytes, 0.11%)</title><rect x="16.0416%" y="645" width="0.1129%" height="15" fill="rgb(0,211,162)"/><text x="16.2492%" y="655.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (1,370,104 bytes, 0.11%)</title><rect x="16.0416%" y="629" width="0.1129%" height="15" fill="rgb(0,214,57)"/><text x="16.2492%" y="639.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (1,370,104 bytes, 0.11%)</title><rect x="16.0416%" y="613" width="0.1129%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="623.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (1,370,104 bytes, 0.11%)</title><rect x="16.0416%" y="597" width="0.1129%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="607.50"/></g><g><title>cranelift_wasm::code_translator::translate_load [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="16.2404%" y="229" width="0.1080%" height="15" fill="rgb(0,236,166)"/><text x="16.4480%" y="239.50"/></g><g><title>cranelift_wasm::code_translator::prepare_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="16.2404%" y="213" width="0.1080%" height="15" fill="rgb(0,216,189)"/><text x="16.4480%" y="223.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::bounds_check_and_compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="16.2404%" y="197" width="0.1080%" height="15" fill="rgb(0,225,55)"/><text x="16.4480%" y="207.50"/></g><g><title>cranelift_wasm::code_translator::bounds_checks::compute_addr [polkadot-parachain] (1,310,720 bytes, 0.11%)</title><rect x="16.2404%" y="181" width="0.1080%" height="15" fill="rgb(0,201,63)"/><text x="16.4480%" y="191.50"/></g><g><title>cranelift_wasm::code_translator::translate_operator [polkadot-parachain] (2,050,048 bytes, 0.17%)</title><rect x="16.1799%" y="245" width="0.1690%" height="15" fill="rgb(0,217,88)"/><text x="16.3875%" y="255.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="501" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="511.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="485" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="495.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="469" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="479.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="453" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="463.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="437" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="447.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="421" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="431.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="405" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="415.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="389" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="399.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="373" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="383.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="357" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="367.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="341" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="351.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="325" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="335.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="309" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="319.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="293" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="303.50"/></g><g><title>wasmtime::module::Module::compile_functions::{{closure}} [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="277" width="0.2110%" height="15" fill="rgb(0,217,9)"/><text x="16.3875%" y="287.50"/></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function [polkadot-parachain] (2,560,104 bytes, 0.21%)</title><rect x="16.1799%" y="261" width="0.2110%" height="15" fill="rgb(0,191,209)"/><text x="16.3875%" y="271.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (123,796,759 bytes, 10.20%)</title><rect x="6.1872%" y="1125" width="10.2037%" height="15" fill="rgb(0,214,57)"/><text x="6.3948%" y="1135.50">.. [polkadot-parachain] </text></g><g><title>wasmtime::module::Module::build_artifacts::{{closure}} [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1109" width="0.3494%" height="15" fill="rgb(0,235,49)"/><text x="16.2492%" y="1119.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1093" width="0.3494%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="1103.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1077" width="0.3494%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="1087.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1061" width="0.3494%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="1071.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1045" width="0.3494%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="1055.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1029" width="0.3494%" height="15" fill="rgb(0,229,43)"/><text x="16.2492%" y="1039.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (4,238,818 bytes, 0.35%)</title><rect x="16.0416%" y="1013" width="0.3494%" height="15" fill="rgb(0,222,90)"/><text x="16.2492%" y="1023.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="997" width="0.2364%" height="15" fill="rgb(0,211,162)"/><text x="16.3622%" y="1007.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="981" width="0.2364%" height="15" fill="rgb(0,214,57)"/><text x="16.3622%" y="991.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="965" width="0.2364%" height="15" fill="rgb(0,229,43)"/><text x="16.3622%" y="975.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="949" width="0.2364%" height="15" fill="rgb(0,222,90)"/><text x="16.3622%" y="959.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="933" width="0.2364%" height="15" fill="rgb(0,229,43)"/><text x="16.3622%" y="943.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,867,950 bytes, 0.24%)</title><rect x="16.1546%" y="917" width="0.2364%" height="15" fill="rgb(0,222,90)"/><text x="16.3622%" y="927.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,867,134 bytes, 0.24%)</title><rect x="16.1546%" y="901" width="0.2363%" height="15" fill="rgb(0,211,162)"/><text x="16.3622%" y="911.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,867,134 bytes, 0.24%)</title><rect x="16.1546%" y="885" width="0.2363%" height="15" fill="rgb(0,214,57)"/><text x="16.3622%" y="895.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,867,134 bytes, 0.24%)</title><rect x="16.1546%" y="869" width="0.2363%" height="15" fill="rgb(0,229,43)"/><text x="16.3622%" y="879.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,867,134 bytes, 0.24%)</title><rect x="16.1546%" y="853" width="0.2363%" height="15" fill="rgb(0,222,90)"/><text x="16.3622%" y="863.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="837" width="0.2110%" height="15" fill="rgb(0,211,162)"/><text x="16.3875%" y="847.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="821" width="0.2110%" height="15" fill="rgb(0,214,57)"/><text x="16.3875%" y="831.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="805" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="815.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="789" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="799.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="773" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="783.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="757" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="767.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="741" width="0.2110%" height="15" fill="rgb(0,211,162)"/><text x="16.3875%" y="751.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="725" width="0.2110%" height="15" fill="rgb(0,214,57)"/><text x="16.3875%" y="735.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="709" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="719.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="693" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="703.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="677" width="0.2110%" height="15" fill="rgb(0,211,162)"/><text x="16.3875%" y="687.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="661" width="0.2110%" height="15" fill="rgb(0,214,57)"/><text x="16.3875%" y="671.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="645" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="655.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="629" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="639.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="613" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="623.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="597" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="607.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="581" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="591.50"/></g><g><title>rayon_core::join::join_context::{{closure}} [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="565" width="0.2110%" height="15" fill="rgb(0,222,90)"/><text x="16.3875%" y="575.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="549" width="0.2110%" height="15" fill="rgb(0,211,162)"/><text x="16.3875%" y="559.50"/></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="533" width="0.2110%" height="15" fill="rgb(0,214,57)"/><text x="16.3875%" y="543.50"/></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper [polkadot-parachain] (2,560,488 bytes, 0.21%)</title><rect x="16.1799%" y="517" width="0.2110%" height="15" fill="rgb(0,229,43)"/><text x="16.3875%" y="527.50"/></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold [polkadot-parachain] (123,867,823 bytes, 10.21%)</title><rect x="6.1872%" y="1141" width="10.2096%" height="15" fill="rgb(0,211,162)"/><text x="6.3948%" y="1151.50">.. [polkadot-parachain] </text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF(unsigned int, rocksdb::Slice const&amp;) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="933" width="0.4537%" height="15" fill="rgb(0,237,76)"/><text x="16.6063%" y="943.50"/></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="917" width="0.4537%" height="15" fill="rgb(0,232,106)"/><text x="16.6063%" y="927.50"/></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="901" width="0.4537%" height="15" fill="rgb(0,226,39)"/><text x="16.6063%" y="911.50"/></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="885" width="0.4537%" height="15" fill="rgb(0,230,34)"/><text x="16.6063%" y="895.50"/></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="869" width="0.4537%" height="15" fill="rgb(0,211,193)"/><text x="16.6063%" y="879.50"/></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="853" width="0.4537%" height="15" fill="rgb(0,209,72)"/><text x="16.6063%" y="863.50"/></g><g><title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="837" width="0.4537%" height="15" fill="rgb(0,222,88)"/><text x="16.6063%" y="847.50"/></g><g><title>rocksdb::Arena::AllocateNewBlock(unsigned long) [polkadot-parachain] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="821" width="0.4537%" height="15" fill="rgb(0,226,196)"/><text x="16.6063%" y="831.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="805" width="0.4537%" height="15" fill="rgb(0,190,116)"/><text x="16.6063%" y="815.50"/></g><g><title>_rjem_malloc [libbytehound.so] (5,505,024 bytes, 0.45%)</title><rect x="16.3987%" y="789" width="0.4537%" height="15" fill="rgb(0,233,146)"/><text x="16.6063%" y="799.50"/></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::commit [polkadot-parachain] (64,506,656 bytes, 5.32%)</title><rect x="16.3971%" y="1045" width="5.3169%" height="15" fill="rgb(0,209,74)"/><text x="16.6047%" y="1055.50">..arachain] </text></g><g><title>kvdb_rocksdb::Database::write [polkadot-parachain] (64,506,656 bytes, 5.32%)</title><rect x="16.3971%" y="1029" width="5.3169%" height="15" fill="rgb(0,225,173)"/><text x="16.6047%" y="1039.50">..arachain] </text></g><g><title>rocksdb_write [polkadot-parachain] (64,506,656 bytes, 5.32%)</title><rect x="16.3971%" y="1013" width="5.3169%" height="15" fill="rgb(0,225,194)"/><text x="16.6047%" y="1023.50">..arachain] </text></g><g><title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) [polkadot-parachain] (64,506,656 bytes, 5.32%)</title><rect x="16.3971%" y="997" width="5.3169%" height="15" fill="rgb(0,225,111)"/><text x="16.6047%" y="1007.50">..arachain] </text></g><g><title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*) [polkadot-parachain] (64,506,656 bytes, 5.32%)</title><rect x="16.3971%" y="981" width="5.3169%" height="15" fill="rgb(0,221,199)"/><text x="16.6047%" y="991.50">..arachain] </text></g><g><title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) [polkadot-parachain] (64,487,424 bytes, 5.32%)</title><rect x="16.3987%" y="965" width="5.3153%" height="15" fill="rgb(0,232,62)"/><text x="16.6063%" y="975.50">..arachain] </text></g><g><title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch*::Handler, unsigned long, unsigned long) [polkadot-parachain] (64,487,424 bytes, 5.32%)</title><rect x="16.3987%" y="949" width="5.3153%" height="15" fill="rgb(0,238,15)"/><text x="16.6063%" y="959.50">..arachain] </text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="933" width="4.8615%" height="15" fill="rgb(0,201,113)"/><text x="17.0600%" y="943.50">..rachain] </text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="917" width="4.8615%" height="15" fill="rgb(0,200,154)"/><text x="17.0600%" y="927.50">..rachain] </text></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="901" width="4.8615%" height="15" fill="rgb(0,226,39)"/><text x="17.0600%" y="911.50">..rachain] </text></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="885" width="4.8615%" height="15" fill="rgb(0,230,34)"/><text x="17.0600%" y="895.50">..rachain] </text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="869" width="4.8615%" height="15" fill="rgb(0,211,193)"/><text x="17.0600%" y="879.50">..rachain] </text></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="853" width="4.8615%" height="15" fill="rgb(0,209,72)"/><text x="17.0600%" y="863.50">..rachain] </text></g><g><title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="837" width="4.8615%" height="15" fill="rgb(0,222,88)"/><text x="17.0600%" y="847.50">..rachain] </text></g><g><title>rocksdb::Arena::AllocateNewBlock(unsigned long) [polkadot-parachain] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="821" width="4.8615%" height="15" fill="rgb(0,226,196)"/><text x="17.0600%" y="831.50">..rachain] </text></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="805" width="4.8615%" height="15" fill="rgb(0,190,116)"/><text x="17.0600%" y="815.50">..o.6.0.30] </text></g><g><title>_rjem_malloc [libbytehound.so] (58,982,400 bytes, 4.86%)</title><rect x="16.8524%" y="789" width="4.8615%" height="15" fill="rgb(0,233,146)"/><text x="17.0600%" y="799.50">..ound.so] </text></g><g><title>&lt;sc_client_db::Backend&lt;Block&gt; as sc_client_api::backend::Backend&lt;Block&gt;&gt;::commit_operation [polkadot-parachain] (67,076,662 bytes, 5.53%)</title><rect x="16.3971%" y="1077" width="5.5287%" height="15" fill="rgb(0,192,151)"/><text x="16.6047%" y="1087.50">..parachain] </text></g><g><title>sc_client_db::Backend&lt;Block&gt;::try_commit_operation [polkadot-parachain] (67,076,662 bytes, 5.53%)</title><rect x="16.3971%" y="1061" width="5.5287%" height="15" fill="rgb(0,216,197)"/><text x="16.6047%" y="1071.50">..parachain] </text></g><g><title>sc_client_db::Backend&lt;Block&gt;::note_finalized [polkadot-parachain] (2,570,006 bytes, 0.21%)</title><rect x="21.7139%" y="1045" width="0.2118%" height="15" fill="rgb(0,214,106)"/><text x="21.9215%" y="1055.50"/></g><g><title>sc_state_db::StateDb&lt;BlockHash,Key,D&gt;::canonicalize_block [polkadot-parachain] (2,470,934 bytes, 0.20%)</title><rect x="21.7221%" y="1029" width="0.2037%" height="15" fill="rgb(0,234,91)"/><text x="21.9297%" y="1039.50"/></g><g><title>sc_state_db::pruning::DeathRowQueue&lt;BlockHash,Key,D&gt;::import [polkadot-parachain] (1,996,643 bytes, 0.16%)</title><rect x="21.7612%" y="1013" width="0.1646%" height="15" fill="rgb(0,196,10)"/><text x="21.9688%" y="1023.50"/></g><g><title>sc_service::client::client::Client&lt;B,E,Block,RA&gt;::apply_finality_with_block_hash [polkadot-parachain] (1,549,718 bytes, 0.13%)</title><rect x="21.9258%" y="1077" width="0.1277%" height="15" fill="rgb(0,225,130)"/><text x="22.1334%" y="1087.50"/></g><g><title>&lt;sc_service::client::client::Client&lt;B,E,Block,RA&gt; as sc_client_api::backend::Finalizer&lt;Block,B&gt;&gt;::finalize_block [polkadot-parachain] (68,646,603 bytes, 5.66%)</title><rect x="16.3971%" y="1093" width="5.6581%" height="15" fill="rgb(0,199,89)"/><text x="16.6047%" y="1103.50">..parachain] </text></g><g><title>cumulus_client_consensus_common::parachain_consensus::run_parachain_consensus::{{closure}}::{{closure}}::{{closure}} [polkadot-parachain] (68,716,990 bytes, 5.66%)</title><rect x="16.3971%" y="1109" width="5.6639%" height="15" fill="rgb(0,207,190)"/><text x="16.6047%" y="1119.50">..parachain] </text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (68,735,488 bytes, 5.67%)</title><rect x="16.3971%" y="1125" width="5.6654%" height="15" fill="rgb(0,192,150)"/><text x="16.6047%" y="1135.50">..parachain] </text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="757" width="10.4135%" height="15" fill="rgb(0,196,0)"/><text x="22.2767%" y="767.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::UncompressSerializedBlock(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="741" width="10.4135%" height="15" fill="rgb(0,212,0)"/><text x="22.2767%" y="751.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::UncompressBlockData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="725" width="10.4135%" height="15" fill="rgb(0,239,176)"/><text x="22.2767%" y="735.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) [polkadot-parachain] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="709" width="10.4135%" height="15" fill="rgb(0,195,194)"/><text x="22.2767%" y="719.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::Snappy_Uncompress(char const*, unsigned long, unsigned long*, rocksdb::MemoryAllocator*) [polkadot-parachain] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="693" width="10.4135%" height="15" fill="rgb(0,222,62)"/><text x="22.2767%" y="703.50">..) [polkadot-parachain] </text></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="677" width="10.4135%" height="15" fill="rgb(0,190,116)"/><text x="22.2767%" y="687.50">.. [libstdc++.so.6.0.30] </text></g><g><title>_rjem_malloc [libbytehound.so] (126,341,668 bytes, 10.41%)</title><rect x="22.0691%" y="661" width="10.4135%" height="15" fill="rgb(0,233,146)"/><text x="22.2767%" y="671.50">..loc [libbytehound.so] </text></g><g><title>&lt;alloc::boxed::Box&lt;dyn sc_consensus::block_import::BlockImport&lt;B&gt;+Error = sp_consensus::error::Error+core::marker::Send+core::marker::Sync&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::check_block::{{closure}} [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="1077" width="10.5258%" height="15" fill="rgb(0,194,117)"/><text x="22.2701%" y="1087.50">.. [polkadot-parachain] </text></g><g><title>&lt;cumulus_client_consensus_common::ParachainBlockImport&lt;Block,BI,BE&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::check_block::{{closure}} [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="1061" width="10.5258%" height="15" fill="rgb(0,199,16)"/><text x="22.2701%" y="1071.50">.. [polkadot-parachain] </text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::check_block::{{closure}} [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="1045" width="10.5258%" height="15" fill="rgb(0,190,97)"/><text x="22.2701%" y="1055.50">.. [polkadot-parachain] </text></g><g><title>&lt;&amp;sc_service::client::client::Client&lt;B,E,Block,RA&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::check_block::{{closure}} [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="1029" width="10.5258%" height="15" fill="rgb(0,218,26)"/><text x="22.2701%" y="1039.50">.. [polkadot-parachain] </text></g><g><title>sc_service::client::client::Client&lt;B,E,Block,RA&gt;::block_status [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="1013" width="10.5258%" height="15" fill="rgb(0,199,203)"/><text x="22.2701%" y="1023.50">.. [polkadot-parachain] </text></g><g><title>&lt;sc_client_db::BlockchainDb&lt;Block&gt; as sp_blockchain::header_metadata::HeaderMetadata&lt;Block&gt;&gt;::header_metadata [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="997" width="10.5258%" height="15" fill="rgb(0,215,19)"/><text x="22.2701%" y="1007.50">.. [polkadot-parachain] </text></g><g><title>&lt;sc_client_db::BlockchainDb&lt;Block&gt; as sp_blockchain::backend::HeaderBackend&lt;Block&gt;&gt;::header [polkadot-parachain] (127,704,196 bytes, 10.53%)</title><rect x="22.0625%" y="981" width="10.5258%" height="15" fill="rgb(0,209,21)"/><text x="22.2701%" y="991.50">.. [polkadot-parachain] </text></g><g><title>sc_client_db::utils::read_header [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="965" width="10.5258%" height="15" fill="rgb(0,211,4)"/><text x="22.2701%" y="975.50">.. [polkadot-parachain] </text></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::get [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="949" width="10.5258%" height="15" fill="rgb(0,232,74)"/><text x="22.2701%" y="959.50">.. [polkadot-parachain] </text></g><g><title>kvdb_rocksdb::Database::get [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="933" width="10.5258%" height="15" fill="rgb(0,217,64)"/><text x="22.2701%" y="943.50">.. [polkadot-parachain] </text></g><g><title>rocksdb_get_pinned_cf [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="917" width="10.5258%" height="15" fill="rgb(0,208,62)"/><text x="22.2701%" y="927.50">..f [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="901" width="10.5258%" height="15" fill="rgb(0,202,171)"/><text x="22.2701%" y="911.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="885" width="10.5258%" height="15" fill="rgb(0,214,103)"/><text x="22.2701%" y="895.50">.. [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [polkadot-parachain] (127,703,908 bytes, 10.53%)</title><rect x="22.0625%" y="869" width="10.5258%" height="15" fill="rgb(0,192,175)"/><text x="22.2701%" y="879.50">.. [polkadot-parachain] </text></g><g><title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, rocksdb::PinnedIteratorsManager*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) [polkadot-parachain] (127,703,828 bytes, 10.53%)</title><rect x="22.0625%" y="853" width="10.5258%" height="15" fill="rgb(0,194,99)"/><text x="22.2701%" y="863.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::HistogramImpl*, bool, int, unsigned long) [polkadot-parachain] (127,703,828 bytes, 10.53%)</title><rect x="22.0625%" y="837" width="10.5258%" height="15" fill="rgb(0,234,158)"/><text x="22.2701%" y="847.50">.. [polkadot-parachain] </text></g><g><title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) [polkadot-parachain] (127,703,828 bytes, 10.53%)</title><rect x="22.0625%" y="821" width="10.5258%" height="15" fill="rgb(0,222,104)"/><text x="22.2701%" y="831.50">..) [polkadot-parachain] </text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const [polkadot-parachain] (127,624,622 bytes, 10.52%)</title><rect x="22.0691%" y="805" width="10.5193%" height="15" fill="rgb(0,215,145)"/><text x="22.2767%" y="815.50">.. [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (127,624,622 bytes, 10.52%)</title><rect x="22.0691%" y="789" width="10.5193%" height="15" fill="rgb(0,230,157)"/><text x="22.2767%" y="799.50">.. [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (127,624,622 bytes, 10.52%)</title><rect x="22.0691%" y="773" width="10.5193%" height="15" fill="rgb(0,200,21)"/><text x="22.2767%" y="783.50">.. [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt;(rocksdb::Slice const&amp;, rocksdb::FullTypedCacheInterface&lt;rocksdb::Block_kData, rocksdb::BlockCreateContext, rocksdb::Block_kData::kCacheEntryRole, rocksdb::Cache*&gt;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::BlockContents&amp;&amp;, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::GetContext*) const [polkadot-parachain] (1,282,954 bytes, 0.11%)</title><rect x="32.4826%" y="757" width="0.1057%" height="15" fill="rgb(0,225,107)"/><text x="32.6902%" y="767.50"/></g><g><title>core::ptr::drop_in_place&lt;sc_client_db::record_stats_state::RecordStatsState&lt;sc_client_db::RefTrackingState&lt;sp_runtime::generic::block::Block&lt;sp_runtime::generic::header::Header&lt;u32,sp_runtime::traits::BlakeTwo256&gt;,sp_runtime::OpaqueExtrinsic&gt;&gt;,sp_runtime::generic::block::Block&lt;sp_runtime::generic::header::Header&lt;u32,sp_runtime::traits::BlakeTwo256&gt;,sp_runtime::OpaqueExtrinsic&gt;&gt;&gt; [polkadot-parachain] (312,754,224 bytes, 25.78%)</title><rect x="32.5907%" y="933" width="25.7783%" height="15" fill="rgb(0,213,66)"/><text x="32.7983%" y="943.50">..&gt;,sp_runtime::OpaqueExtrinsic&gt;&gt;&gt; [polkadot-parachain] </text></g><g><title>core::ptr::drop_in_place&lt;sc_client_db::RefTrackingState&lt;sp_runtime::generic::block::Block&lt;sp_runtime::generic::header::Header&lt;u32,sp_runtime::traits::BlakeTwo256&gt;,sp_runtime::OpaqueExtrinsic&gt;&gt;&gt; [polkadot-parachain] (312,754,224 bytes, 25.78%)</title><rect x="32.5907%" y="917" width="25.7783%" height="15" fill="rgb(0,198,64)"/><text x="32.7983%" y="927.50">..&gt;,sp_runtime::OpaqueExtrinsic&gt;&gt;&gt; [polkadot-parachain] </text></g><g><title>core::ptr::drop_in_place&lt;sp_state_machine::trie_backend_essence::TrieBackendEssence&lt;alloc::sync::Arc&lt;dyn sp_state_machine::trie_backend_essence::Storage&lt;sp_runtime::traits::BlakeTwo256&gt;&gt;,sp_runtime::traits::BlakeTwo256,sp_trie::cache::LocalTrieCache&lt;sp_runtime::traits::BlakeTwo256&gt;,sp_trie::recorder::Recorder&lt;sp_runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] (312,754,224 bytes, 25.78%)</title><rect x="32.5907%" y="901" width="25.7783%" height="15" fill="rgb(0,225,114)"/><text x="32.7983%" y="911.50">.._runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] </text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;sp_trie::cache::LocalTrieCache&lt;sp_runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] (312,754,224 bytes, 25.78%)</title><rect x="32.5907%" y="885" width="25.7783%" height="15" fill="rgb(0,199,33)"/><text x="32.7983%" y="895.50">.._runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] </text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow_and_insert [polkadot-parachain] (312,475,680 bytes, 25.76%)</title><rect x="32.6137%" y="869" width="25.7553%" height="15" fill="rgb(0,233,113)"/><text x="32.8213%" y="879.50">..Map&lt;K,V,L,S&gt;::try_grow_and_insert [polkadot-parachain] </text></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow [polkadot-parachain] (312,475,680 bytes, 25.76%)</title><rect x="32.6137%" y="853" width="25.7553%" height="15" fill="rgb(0,202,11)"/><text x="32.8213%" y="863.50">..nellru::LruMap&lt;K,V,L,S&gt;::try_grow [polkadot-parachain] </text></g><g><title>_rjem_malloc [libbytehound.so] (312,475,680 bytes, 25.76%)</title><rect x="32.6137%" y="837" width="25.7553%" height="15" fill="rgb(0,233,146)"/><text x="32.8213%" y="847.50">_rjem_malloc [libbytehound.so] </text></g><g><title>&lt;trie_db::triedbmut::TrieDBMut&lt;L&gt; as trie_db::TrieMut&lt;L&gt;&gt;::insert [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="677" width="0.1313%" height="15" fill="rgb(0,198,119)"/><text x="58.6464%" y="687.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="661" width="0.1313%" height="15" fill="rgb(0,197,45)"/><text x="58.6464%" y="671.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_inspector [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="645" width="0.1313%" height="15" fill="rgb(0,211,166)"/><text x="58.6464%" y="655.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="629" width="0.1313%" height="15" fill="rgb(0,197,45)"/><text x="58.6464%" y="639.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_inspector [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="613" width="0.1313%" height="15" fill="rgb(0,211,166)"/><text x="58.6464%" y="623.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,593,236 bytes, 0.13%)</title><rect x="58.4388%" y="597" width="0.1313%" height="15" fill="rgb(0,197,45)"/><text x="58.6464%" y="607.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_inspector [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="581" width="0.1286%" height="15" fill="rgb(0,211,166)"/><text x="58.6491%" y="591.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="565" width="0.1286%" height="15" fill="rgb(0,197,45)"/><text x="58.6491%" y="575.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_inspector [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="549" width="0.1286%" height="15" fill="rgb(0,211,166)"/><text x="58.6491%" y="559.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="533" width="0.1286%" height="15" fill="rgb(0,197,45)"/><text x="58.6491%" y="543.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_inspector [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="517" width="0.1286%" height="15" fill="rgb(0,211,166)"/><text x="58.6491%" y="527.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::insert_at [polkadot-parachain] (1,560,270 bytes, 0.13%)</title><rect x="58.4415%" y="501" width="0.1286%" height="15" fill="rgb(0,197,45)"/><text x="58.6491%" y="511.50"/></g><g><title>&lt;trie_db::triedbmut::TrieDBMut&lt;L&gt; as trie_db::TrieMut&lt;L&gt;&gt;::remove [polkadot-parachain] (2,132,132 bytes, 0.18%)</title><rect x="58.5702%" y="677" width="0.1757%" height="15" fill="rgb(0,224,12)"/><text x="58.7778%" y="687.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,132,132 bytes, 0.18%)</title><rect x="58.5702%" y="661" width="0.1757%" height="15" fill="rgb(0,201,208)"/><text x="58.7778%" y="671.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (2,132,132 bytes, 0.18%)</title><rect x="58.5702%" y="645" width="0.1757%" height="15" fill="rgb(0,204,50)"/><text x="58.7778%" y="655.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,132,132 bytes, 0.18%)</title><rect x="58.5702%" y="629" width="0.1757%" height="15" fill="rgb(0,201,208)"/><text x="58.7778%" y="639.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (2,083,021 bytes, 0.17%)</title><rect x="58.5742%" y="613" width="0.1717%" height="15" fill="rgb(0,204,50)"/><text x="58.7818%" y="623.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,083,021 bytes, 0.17%)</title><rect x="58.5742%" y="597" width="0.1717%" height="15" fill="rgb(0,201,208)"/><text x="58.7818%" y="607.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="581" width="0.1690%" height="15" fill="rgb(0,204,50)"/><text x="58.7845%" y="591.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="565" width="0.1690%" height="15" fill="rgb(0,201,208)"/><text x="58.7845%" y="575.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="549" width="0.1690%" height="15" fill="rgb(0,204,50)"/><text x="58.7845%" y="559.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="533" width="0.1690%" height="15" fill="rgb(0,201,208)"/><text x="58.7845%" y="543.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="517" width="0.1690%" height="15" fill="rgb(0,204,50)"/><text x="58.7845%" y="527.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (2,050,133 bytes, 0.17%)</title><rect x="58.5769%" y="501" width="0.1690%" height="15" fill="rgb(0,201,208)"/><text x="58.7845%" y="511.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at::{{closure}} [polkadot-parachain] (1,540,959 bytes, 0.13%)</title><rect x="58.6189%" y="485" width="0.1270%" height="15" fill="rgb(0,204,50)"/><text x="58.8265%" y="495.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::remove_at [polkadot-parachain] (1,540,959 bytes, 0.13%)</title><rect x="58.6189%" y="469" width="0.1270%" height="15" fill="rgb(0,201,208)"/><text x="58.8265%" y="479.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (10,104,320 bytes, 0.83%)</title><rect x="58.7459%" y="661" width="0.8328%" height="15" fill="rgb(0,192,8)"/><text x="58.9535%" y="671.50"/></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (10,104,320 bytes, 0.83%)</title><rect x="58.7459%" y="645" width="0.8328%" height="15" fill="rgb(0,217,54)"/><text x="58.9535%" y="655.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (10,104,320 bytes, 0.83%)</title><rect x="58.7459%" y="629" width="0.8328%" height="15" fill="rgb(0,209,111)"/><text x="58.9535%" y="639.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (10,104,320 bytes, 0.83%)</title><rect x="58.7459%" y="613" width="0.8328%" height="15" fill="rgb(0,202,100)"/><text x="58.9535%" y="623.50"/></g><g><title>_rjem_malloc [libbytehound.so] (10,104,320 bytes, 0.83%)</title><rect x="58.7459%" y="597" width="0.8328%" height="15" fill="rgb(0,233,146)"/><text x="58.9535%" y="607.50"/></g><g><title>_rjem_malloc [libbytehound.so] (37,335,120 bytes, 3.08%)</title><rect x="59.5787%" y="565" width="3.0773%" height="15" fill="rgb(0,233,146)"/><text x="59.7863%" y="575.50">...so] </text></g><g><title>_rjem_malloc [libbytehound.so] (8,887,600 bytes, 0.73%)</title><rect x="62.6560%" y="549" width="0.7325%" height="15" fill="rgb(0,233,146)"/><text x="62.8636%" y="559.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (47,791,120 bytes, 3.94%)</title><rect x="59.5787%" y="629" width="3.9391%" height="15" fill="rgb(0,192,8)"/><text x="59.7863%" y="639.50">..chain] </text></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (47,791,120 bytes, 3.94%)</title><rect x="59.5787%" y="613" width="3.9391%" height="15" fill="rgb(0,217,54)"/><text x="59.7863%" y="623.50">..chain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (47,791,120 bytes, 3.94%)</title><rect x="59.5787%" y="597" width="3.9391%" height="15" fill="rgb(0,209,111)"/><text x="59.7863%" y="607.50">..chain] </text></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (47,791,120 bytes, 3.94%)</title><rect x="59.5787%" y="581" width="3.9391%" height="15" fill="rgb(0,202,100)"/><text x="59.7863%" y="591.50">..chain] </text></g><g><title>trie_db::node::NodeHandle::to_owned_handle [polkadot-parachain] (10,456,000 bytes, 0.86%)</title><rect x="62.6560%" y="565" width="0.8618%" height="15" fill="rgb(0,191,17)"/><text x="62.8636%" y="575.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (1,568,400 bytes, 0.13%)</title><rect x="63.3886%" y="549" width="0.1293%" height="15" fill="rgb(0,202,100)"/><text x="63.5962%" y="559.50"/></g><g><title>&lt;trie_db::Bytes as core::convert::From&lt;&amp;[u8]&gt;&gt;::from [polkadot-parachain] (1,568,400 bytes, 0.13%)</title><rect x="63.3886%" y="533" width="0.1293%" height="15" fill="rgb(0,228,37)"/><text x="63.5962%" y="543.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,568,400 bytes, 0.13%)</title><rect x="63.3886%" y="517" width="0.1293%" height="15" fill="rgb(0,233,146)"/><text x="63.5962%" y="527.50"/></g><g><title>_rjem_malloc [libbytehound.so] (36,910,360 bytes, 3.04%)</title><rect x="63.5179%" y="533" width="3.0423%" height="15" fill="rgb(0,233,146)"/><text x="63.7255%" y="543.50">...so] </text></g><g><title>_rjem_malloc [libbytehound.so] (12,754,624 bytes, 1.05%)</title><rect x="66.5602%" y="517" width="1.0513%" height="15" fill="rgb(0,233,146)"/><text x="66.7678%" y="527.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (51,929,776 bytes, 4.28%)</title><rect x="63.5179%" y="597" width="4.2802%" height="15" fill="rgb(0,192,8)"/><text x="63.7255%" y="607.50">..achain] </text></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (51,929,776 bytes, 4.28%)</title><rect x="63.5179%" y="581" width="4.2802%" height="15" fill="rgb(0,217,54)"/><text x="63.7255%" y="591.50">..achain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (51,929,776 bytes, 4.28%)</title><rect x="63.5179%" y="565" width="4.2802%" height="15" fill="rgb(0,209,111)"/><text x="63.7255%" y="575.50">..achain] </text></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (51,929,776 bytes, 4.28%)</title><rect x="63.5179%" y="549" width="4.2802%" height="15" fill="rgb(0,202,100)"/><text x="63.7255%" y="559.50">..achain] </text></g><g><title>trie_db::node::NodeHandle::to_owned_handle [polkadot-parachain] (15,019,224 bytes, 1.24%)</title><rect x="66.5602%" y="533" width="1.2379%" height="15" fill="rgb(0,191,17)"/><text x="66.7678%" y="543.50">.. </text></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (2,264,600 bytes, 0.19%)</title><rect x="67.6114%" y="517" width="0.1867%" height="15" fill="rgb(0,202,100)"/><text x="67.8190%" y="527.50"/></g><g><title>&lt;trie_db::Bytes as core::convert::From&lt;&amp;[u8]&gt;&gt;::from [polkadot-parachain] (2,264,600 bytes, 0.19%)</title><rect x="67.6114%" y="501" width="0.1867%" height="15" fill="rgb(0,228,37)"/><text x="67.8190%" y="511.50"/></g><g><title>_rjem_malloc [libbytehound.so] (2,264,600 bytes, 0.19%)</title><rect x="67.6114%" y="485" width="0.1867%" height="15" fill="rgb(0,233,146)"/><text x="67.8190%" y="495.50"/></g><g><title>_rjem_malloc [libbytehound.so] (29,416,320 bytes, 2.42%)</title><rect x="67.8095%" y="501" width="2.4246%" height="15" fill="rgb(0,233,146)"/><text x="68.0171%" y="511.50">..so] </text></g><g><title>_rjem_malloc [libbytehound.so] (7,551,808 bytes, 0.62%)</title><rect x="70.2341%" y="485" width="0.6224%" height="15" fill="rgb(0,233,146)"/><text x="70.4417%" y="495.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (38,540,312 bytes, 3.18%)</title><rect x="67.7982%" y="565" width="3.1766%" height="15" fill="rgb(0,192,8)"/><text x="68.0058%" y="575.50">..ain] </text></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (38,540,312 bytes, 3.18%)</title><rect x="67.7982%" y="549" width="3.1766%" height="15" fill="rgb(0,217,54)"/><text x="68.0058%" y="559.50">..ain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (38,540,312 bytes, 3.18%)</title><rect x="67.7982%" y="533" width="3.1766%" height="15" fill="rgb(0,209,111)"/><text x="68.0058%" y="543.50">..ain] </text></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (38,540,312 bytes, 3.18%)</title><rect x="67.7982%" y="517" width="3.1766%" height="15" fill="rgb(0,202,100)"/><text x="68.0058%" y="527.50">..ain] </text></g><g><title>trie_db::node::NodeHandle::to_owned_handle [polkadot-parachain] (8,985,976 bytes, 0.74%)</title><rect x="70.2341%" y="501" width="0.7407%" height="15" fill="rgb(0,191,17)"/><text x="70.4417%" y="511.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (1,434,168 bytes, 0.12%)</title><rect x="70.8566%" y="485" width="0.1182%" height="15" fill="rgb(0,202,100)"/><text x="71.0642%" y="495.50"/></g><g><title>&lt;trie_db::Bytes as core::convert::From&lt;&amp;[u8]&gt;&gt;::from [polkadot-parachain] (1,434,168 bytes, 0.12%)</title><rect x="70.8566%" y="469" width="0.1182%" height="15" fill="rgb(0,228,37)"/><text x="71.0642%" y="479.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,434,168 bytes, 0.12%)</title><rect x="70.8566%" y="453" width="0.1182%" height="15" fill="rgb(0,233,146)"/><text x="71.0642%" y="463.50"/></g><g><title>_rjem_malloc [libbytehound.so] (8,072,000 bytes, 0.67%)</title><rect x="71.0605%" y="469" width="0.6653%" height="15" fill="rgb(0,233,146)"/><text x="71.2681%" y="479.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (9,111,248 bytes, 0.75%)</title><rect x="70.9748%" y="533" width="0.7510%" height="15" fill="rgb(0,192,8)"/><text x="71.1824%" y="543.50"/></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (9,111,248 bytes, 0.75%)</title><rect x="70.9748%" y="517" width="0.7510%" height="15" fill="rgb(0,217,54)"/><text x="71.1824%" y="527.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (9,111,248 bytes, 0.75%)</title><rect x="70.9748%" y="501" width="0.7510%" height="15" fill="rgb(0,209,111)"/><text x="71.1824%" y="511.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (9,111,248 bytes, 0.75%)</title><rect x="70.9748%" y="485" width="0.7510%" height="15" fill="rgb(0,202,100)"/><text x="71.1824%" y="495.50"/></g><g><title>_rjem_malloc [libbytehound.so] (13,101,880 bytes, 1.08%)</title><rect x="71.7258%" y="437" width="1.0799%" height="15" fill="rgb(0,233,146)"/><text x="71.9334%" y="447.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (13,132,152 bytes, 1.08%)</title><rect x="71.7258%" y="501" width="1.0824%" height="15" fill="rgb(0,192,8)"/><text x="71.9334%" y="511.50"/></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (13,132,152 bytes, 1.08%)</title><rect x="71.7258%" y="485" width="1.0824%" height="15" fill="rgb(0,217,54)"/><text x="71.9334%" y="495.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (13,132,152 bytes, 1.08%)</title><rect x="71.7258%" y="469" width="1.0824%" height="15" fill="rgb(0,209,111)"/><text x="71.9334%" y="479.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (13,132,152 bytes, 1.08%)</title><rect x="71.7258%" y="453" width="1.0824%" height="15" fill="rgb(0,202,100)"/><text x="71.9334%" y="463.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (12,725,880 bytes, 1.05%)</title><rect x="72.8083%" y="469" width="1.0489%" height="15" fill="rgb(0,192,8)"/><text x="73.0159%" y="479.50"/></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (12,725,880 bytes, 1.05%)</title><rect x="72.8083%" y="453" width="1.0489%" height="15" fill="rgb(0,217,54)"/><text x="73.0159%" y="463.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (12,725,880 bytes, 1.05%)</title><rect x="72.8083%" y="437" width="1.0489%" height="15" fill="rgb(0,209,111)"/><text x="73.0159%" y="447.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (12,725,880 bytes, 1.05%)</title><rect x="72.8083%" y="421" width="1.0489%" height="15" fill="rgb(0,202,100)"/><text x="73.0159%" y="431.50"/></g><g><title>_rjem_malloc [libbytehound.so] (12,725,880 bytes, 1.05%)</title><rect x="72.8083%" y="405" width="1.0489%" height="15" fill="rgb(0,233,146)"/><text x="73.0159%" y="415.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node [polkadot-parachain] (5,005,024 bytes, 0.41%)</title><rect x="73.8572%" y="437" width="0.4125%" height="15" fill="rgb(0,192,8)"/><text x="74.0648%" y="447.50"/></g><g><title>&lt;sp_trie::cache::TrieCache&lt;H&gt; as trie_db::TrieCache&lt;sp_trie::node_codec::NodeCodec&lt;H&gt;&gt;&gt;::get_or_insert_node [polkadot-parachain] (5,005,024 bytes, 0.41%)</title><rect x="73.8572%" y="421" width="0.4125%" height="15" fill="rgb(0,217,54)"/><text x="74.0648%" y="431.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_node::{{closure}} [polkadot-parachain] (5,005,024 bytes, 0.41%)</title><rect x="73.8572%" y="405" width="0.4125%" height="15" fill="rgb(0,209,111)"/><text x="74.0648%" y="415.50"/></g><g><title>trie_db::node::Node::to_owned_node [polkadot-parachain] (5,005,024 bytes, 0.41%)</title><rect x="73.8572%" y="389" width="0.4125%" height="15" fill="rgb(0,202,100)"/><text x="74.0648%" y="399.50"/></g><g><title>_rjem_malloc [libbytehound.so] (4,646,800 bytes, 0.38%)</title><rect x="73.8867%" y="373" width="0.3830%" height="15" fill="rgb(0,233,146)"/><text x="74.0943%" y="383.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (5,776,073 bytes, 0.48%)</title><rect x="73.8572%" y="469" width="0.4761%" height="15" fill="rgb(0,223,112)"/><text x="74.0648%" y="479.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (5,776,073 bytes, 0.48%)</title><rect x="73.8572%" y="453" width="0.4761%" height="15" fill="rgb(0,193,114)"/><text x="74.0648%" y="463.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (18,504,915 bytes, 1.53%)</title><rect x="72.8082%" y="501" width="1.5252%" height="15" fill="rgb(0,223,112)"/><text x="73.0158%" y="511.50">..] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (18,504,915 bytes, 1.53%)</title><rect x="72.8082%" y="485" width="1.5252%" height="15" fill="rgb(0,193,114)"/><text x="73.0158%" y="495.50">..] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (31,682,981 bytes, 2.61%)</title><rect x="71.7258%" y="533" width="2.6114%" height="15" fill="rgb(0,223,112)"/><text x="71.9334%" y="543.50">..in] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (31,682,981 bytes, 2.61%)</title><rect x="71.7258%" y="517" width="2.6114%" height="15" fill="rgb(0,193,114)"/><text x="71.9334%" y="527.50">..in] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (157,953,608 bytes, 13.02%)</title><rect x="70.9748%" y="565" width="13.0191%" height="15" fill="rgb(0,223,112)"/><text x="71.1824%" y="575.50">..sure}} [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (157,953,608 bytes, 13.02%)</title><rect x="70.9748%" y="549" width="13.0191%" height="15" fill="rgb(0,193,114)"/><text x="71.1824%" y="559.50">.._child [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::Value&lt;L&gt;::into_encoded [polkadot-parachain] (117,158,818 bytes, 9.66%)</title><rect x="74.3372%" y="533" width="9.6566%" height="15" fill="rgb(0,236,89)"/><text x="74.5448%" y="543.50">..polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (117,158,818 bytes, 9.66%)</title><rect x="74.3372%" y="517" width="9.6566%" height="15" fill="rgb(0,223,112)"/><text x="74.5448%" y="527.50">..polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_value [polkadot-parachain] (117,158,688 bytes, 9.66%)</title><rect x="74.3372%" y="501" width="9.6566%" height="15" fill="rgb(0,224,169)"/><text x="74.5448%" y="511.50">..polkadot-parachain] </text></g><g><title>&lt;trie_db::Bytes as core::convert::From&lt;&amp;[u8]&gt;&gt;::from [polkadot-parachain] (117,158,688 bytes, 9.66%)</title><rect x="74.3372%" y="485" width="9.6566%" height="15" fill="rgb(0,228,37)"/><text x="74.5448%" y="495.50">..polkadot-parachain] </text></g><g><title>_rjem_malloc [libbytehound.so] (117,158,688 bytes, 9.66%)</title><rect x="74.3372%" y="469" width="9.6566%" height="15" fill="rgb(0,233,146)"/><text x="74.5448%" y="479.50">..oc [libbytehound.so] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (203,564,646 bytes, 16.78%)</title><rect x="67.7981%" y="597" width="16.7785%" height="15" fill="rgb(0,223,112)"/><text x="68.0057%" y="607.50">..ld::{{closure}} [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (203,564,646 bytes, 16.78%)</title><rect x="67.7981%" y="581" width="16.7785%" height="15" fill="rgb(0,193,114)"/><text x="68.0057%" y="591.50">..::commit_child [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::Value&lt;L&gt;::into_encoded [polkadot-parachain] (7,069,923 bytes, 0.58%)</title><rect x="83.9939%" y="565" width="0.5827%" height="15" fill="rgb(0,236,89)"/><text x="84.2015%" y="575.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (7,069,923 bytes, 0.58%)</title><rect x="83.9939%" y="549" width="0.5827%" height="15" fill="rgb(0,223,112)"/><text x="84.2015%" y="559.50"/></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::cache_value [polkadot-parachain] (7,069,728 bytes, 0.58%)</title><rect x="83.9939%" y="533" width="0.5827%" height="15" fill="rgb(0,224,169)"/><text x="84.2015%" y="543.50"/></g><g><title>&lt;trie_db::Bytes as core::convert::From&lt;&amp;[u8]&gt;&gt;::from [polkadot-parachain] (7,069,728 bytes, 0.58%)</title><rect x="83.9939%" y="517" width="0.5827%" height="15" fill="rgb(0,228,37)"/><text x="84.2015%" y="527.50"/></g><g><title>_rjem_malloc [libbytehound.so] (7,069,728 bytes, 0.58%)</title><rect x="83.9939%" y="501" width="0.5827%" height="15" fill="rgb(0,233,146)"/><text x="84.2015%" y="511.50"/></g><g><title>sp_state_machine::trie_backend_essence::TrieBackendEssence&lt;S,H,C,R&gt;::storage_root::{{closure}} [polkadot-parachain] (317,121,826 bytes, 26.14%)</title><rect x="58.4388%" y="693" width="26.1382%" height="15" fill="rgb(0,204,189)"/><text x="58.6464%" y="703.50">..S,H,C,R&gt;::storage_root::{{closure}} [polkadot-parachain] </text></g><g><title>core::ptr::drop_in_place&lt;trie_db::triedbmut::TrieDBMut&lt;sp_trie::LayoutV1&lt;sp_runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] (313,396,458 bytes, 25.83%)</title><rect x="58.7459%" y="677" width="25.8312%" height="15" fill="rgb(0,229,182)"/><text x="58.9535%" y="687.50">..p_runtime::traits::BlakeTwo256&gt;&gt;&gt; [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit::{{closure}} [polkadot-parachain] (303,292,105 bytes, 25.00%)</title><rect x="59.5787%" y="661" width="24.9984%" height="15" fill="rgb(0,200,183)"/><text x="59.7863%" y="671.50">..eDBMut&lt;L&gt;::commit::{{closure}} [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (303,292,105 bytes, 25.00%)</title><rect x="59.5787%" y="645" width="24.9984%" height="15" fill="rgb(0,193,114)"/><text x="59.7863%" y="655.50">..ut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child::{{closure}} [polkadot-parachain] (255,500,754 bytes, 21.06%)</title><rect x="63.5178%" y="629" width="21.0592%" height="15" fill="rgb(0,223,112)"/><text x="63.7254%" y="639.50">..ommit_child::{{closure}} [polkadot-parachain] </text></g><g><title>trie_db::triedbmut::TrieDBMut&lt;L&gt;::commit_child [polkadot-parachain] (255,500,754 bytes, 21.06%)</title><rect x="63.5178%" y="613" width="21.0592%" height="15" fill="rgb(0,193,114)"/><text x="63.7254%" y="623.50">..BMut&lt;L&gt;::commit_child [polkadot-parachain] </text></g><g><title>&lt;polkadot_omni_node_lib::fake_runtime_api::aura_sr25519::RuntimeApiImpl&lt;__SrApiBlock__,RuntimeApiImplCall&gt; as sp_api::Core&lt;__SrApiBlock__&gt;&gt;::__runtime_api_internal_call_api_at [polkadot-parachain] (631,391,717 bytes, 52.04%)</title><rect x="32.5907%" y="997" width="52.0414%" height="15" fill="rgb(0,200,42)"/><text x="32.7983%" y="1007.50">..ck__,RuntimeApiImplCall&gt; as sp_api::Core&lt;__SrApiBlock__&gt;&gt;::__runtime_api_internal_call_api_at [polkadot-parachain] </text></g><g><title>&lt;polkadot_omni_node_lib::fake_runtime_api::aura_sr25519::RuntimeApiImpl&lt;__SrApiBlock__,RuntimeApiImplCall&gt; as sp_api::Core&lt;__SrApiBlock__&gt;&gt;::__runtime_api_internal_call_api_at::{{closure}} [polkadot-parachain] (631,391,717 bytes, 52.04%)</title><rect x="32.5907%" y="981" width="52.0414%" height="15" fill="rgb(0,221,32)"/><text x="32.7983%" y="991.50">..piImplCall&gt; as sp_api::Core&lt;__SrApiBlock__&gt;&gt;::__runtime_api_internal_call_api_at::{{closure}} [polkadot-parachain] </text></g><g><title>&lt;sc_service::client::client::Client&lt;B,E,Block,RA&gt; as sp_api::CallApiAt&lt;Block&gt;&gt;::call_api_at [polkadot-parachain] (631,391,717 bytes, 52.04%)</title><rect x="32.5907%" y="965" width="52.0414%" height="15" fill="rgb(0,233,29)"/><text x="32.7983%" y="975.50">&lt;sc_service::client::client::Client&lt;B,E,Block,RA&gt; as sp_api::CallApiAt&lt;Block&gt;&gt;::call_api_at [polkadot-parachain] </text></g><g><title>&lt;sc_service::client::call_executor::LocalCallExecutor&lt;Block,B,E&gt; as sc_client_api::call_executor::CallExecutor&lt;Block&gt;&gt;::contextual_call [polkadot-parachain] (631,391,717 bytes, 52.04%)</title><rect x="32.5907%" y="949" width="52.0414%" height="15" fill="rgb(0,211,184)"/><text x="32.7983%" y="959.50">..lCallExecutor&lt;Block,B,E&gt; as sc_client_api::call_executor::CallExecutor&lt;Block&gt;&gt;::contextual_call [polkadot-parachain] </text></g><g><title>sp_state_machine::execution::StateMachine&lt;B,H,Exec&gt;::execute [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="933" width="26.2632%" height="15" fill="rgb(0,200,93)"/><text x="58.5766%" y="943.50">..n::StateMachine&lt;B,H,Exec&gt;::execute [polkadot-parachain] </text></g><g><title>&lt;sc_executor::executor::WasmExecutor&lt;H&gt; as sp_core::traits::CodeExecutor&gt;::call [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="917" width="26.2632%" height="15" fill="rgb(0,230,101)"/><text x="58.5766%" y="927.50">..s sp_core::traits::CodeExecutor&gt;::call [polkadot-parachain] </text></g><g><title>sc_executor::executor::WasmExecutor&lt;H&gt;::with_instance::{{closure}} [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="901" width="26.2632%" height="15" fill="rgb(0,239,67)"/><text x="58.5766%" y="911.50">..utor&lt;H&gt;::with_instance::{{closure}} [polkadot-parachain] </text></g><g><title>sc_executor_common::wasm_runtime::WasmInstance::call_export [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="885" width="26.2632%" height="15" fill="rgb(0,201,91)"/><text x="58.5766%" y="895.50">.._runtime::WasmInstance::call_export [polkadot-parachain] </text></g><g><title>sc_executor_wasmtime::runtime::WasmtimeInstance::call_impl [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="869" width="26.2632%" height="15" fill="rgb(0,214,20)"/><text x="58.5766%" y="879.50">..runtime::WasmtimeInstance::call_impl [polkadot-parachain] </text></g><g><title>wasmtime_setjmp [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="853" width="26.2632%" height="15" fill="rgb(0,199,149)"/><text x="58.5766%" y="863.50">wasmtime_setjmp [polkadot-parachain] </text></g><g><title>wasmtime_runtime::traphandlers::catch_traps::call_closure [polkadot-parachain] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="837" width="26.2632%" height="15" fill="rgb(0,238,23)"/><text x="58.5766%" y="847.50">..traphandlers::catch_traps::call_closure [polkadot-parachain] </text></g><g><title>0x000071074767B28E [???] (318,637,493 bytes, 26.26%)</title><rect x="58.3690%" y="821" width="26.2632%" height="15" fill="rgb(0,214,95)"/><text x="58.5766%" y="831.50">0x000071074767B28E [???] </text></g><g><title>0x0000710747516D93 [???] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="805" width="26.1933%" height="15" fill="rgb(0,229,35)"/><text x="58.6464%" y="815.50">0x0000710747516D93 [???] </text></g><g><title>0x0000710747523A14 [???] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="789" width="26.1933%" height="15" fill="rgb(0,234,62)"/><text x="58.6464%" y="799.50">0x0000710747523A14 [???] </text></g><g><title>0x00007107478FEF12 [???] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="773" width="26.1933%" height="15" fill="rgb(0,219,7)"/><text x="58.6464%" y="783.50">0x00007107478FEF12 [???] </text></g><g><title>&lt;F as wasmtime::func::IntoFunc&lt;T,(wasmtime::func::Caller&lt;T&gt;,A1),R&gt;&gt;::into_func::wasm_to_host_shim [polkadot-parachain] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="757" width="26.1933%" height="15" fill="rgb(0,229,18)"/><text x="58.6464%" y="767.50">..,R&gt;&gt;::into_func::wasm_to_host_shim [polkadot-parachain] </text></g><g><title>sp_io::storage::ExtStorageRootVersion2::call [polkadot-parachain] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="741" width="26.1933%" height="15" fill="rgb(0,234,74)"/><text x="58.6464%" y="751.50">..storage::ExtStorageRootVersion2::call [polkadot-parachain] </text></g><g><title>&lt;sp_state_machine::ext::Ext&lt;H,B&gt; as sp_externalities::Externalities&gt;::storage_root [polkadot-parachain] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="725" width="26.1933%" height="15" fill="rgb(0,222,25)"/><text x="58.6464%" y="735.50">..rnalities::Externalities&gt;::storage_root [polkadot-parachain] </text></g><g><title>sp_state_machine::overlayed_changes::OverlayedChanges&lt;H&gt;::storage_root [polkadot-parachain] (317,790,266 bytes, 26.19%)</title><rect x="58.4388%" y="709" width="26.1933%" height="15" fill="rgb(0,214,169)"/><text x="58.6464%" y="719.50">..:OverlayedChanges&lt;H&gt;::storage_root [polkadot-parachain] </text></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::commit [polkadot-parachain] (10,355,036 bytes, 0.85%)</title><rect x="84.6322%" y="965" width="0.8535%" height="15" fill="rgb(0,209,74)"/><text x="84.8398%" y="975.50"/></g><g><title>kvdb_rocksdb::Database::write [polkadot-parachain] (10,355,036 bytes, 0.85%)</title><rect x="84.6322%" y="949" width="0.8535%" height="15" fill="rgb(0,225,173)"/><text x="84.8398%" y="959.50"/></g><g><title>rocksdb_write [polkadot-parachain] (10,355,036 bytes, 0.85%)</title><rect x="84.6322%" y="933" width="0.8535%" height="15" fill="rgb(0,225,194)"/><text x="84.8398%" y="943.50"/></g><g><title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) [polkadot-parachain] (10,355,036 bytes, 0.85%)</title><rect x="84.6322%" y="917" width="0.8535%" height="15" fill="rgb(0,225,111)"/><text x="84.8398%" y="927.50"/></g><g><title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*) [polkadot-parachain] (10,355,036 bytes, 0.85%)</title><rect x="84.6322%" y="901" width="0.8535%" height="15" fill="rgb(0,221,199)"/><text x="84.8398%" y="911.50"/></g><g><title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="885" width="0.8427%" height="15" fill="rgb(0,232,62)"/><text x="84.8506%" y="895.50"/></g><g><title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch*::Handler, unsigned long, unsigned long) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="869" width="0.8427%" height="15" fill="rgb(0,238,15)"/><text x="84.8506%" y="879.50"/></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="853" width="0.8427%" height="15" fill="rgb(0,201,113)"/><text x="84.8506%" y="863.50"/></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="837" width="0.8427%" height="15" fill="rgb(0,200,154)"/><text x="84.8506%" y="847.50"/></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="821" width="0.8427%" height="15" fill="rgb(0,226,39)"/><text x="84.8506%" y="831.50"/></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="805" width="0.8427%" height="15" fill="rgb(0,230,34)"/><text x="84.8506%" y="815.50"/></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="789" width="0.8427%" height="15" fill="rgb(0,211,193)"/><text x="84.8506%" y="799.50"/></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="773" width="0.8427%" height="15" fill="rgb(0,209,72)"/><text x="84.8506%" y="783.50"/></g><g><title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="757" width="0.8427%" height="15" fill="rgb(0,222,88)"/><text x="84.8506%" y="767.50"/></g><g><title>rocksdb::Arena::AllocateNewBlock(unsigned long) [polkadot-parachain] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="741" width="0.8427%" height="15" fill="rgb(0,226,196)"/><text x="84.8506%" y="751.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="725" width="0.8427%" height="15" fill="rgb(0,190,116)"/><text x="84.8506%" y="735.50"/></g><g><title>_rjem_malloc [libbytehound.so] (10,223,616 bytes, 0.84%)</title><rect x="84.6430%" y="709" width="0.8427%" height="15" fill="rgb(0,233,146)"/><text x="84.8506%" y="719.50"/></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (135,981,174 bytes, 11.21%)</title><rect x="85.4873%" y="757" width="11.2080%" height="15" fill="rgb(0,196,0)"/><text x="85.6949%" y="767.50">..() [polkadot-parachain] </text></g><g><title>rocksdb::BlockFetcher::PrepareBufferForBlockFromFile() [polkadot-parachain] (135,981,174 bytes, 11.21%)</title><rect x="85.4873%" y="741" width="11.2080%" height="15" fill="rgb(0,224,18)"/><text x="85.6949%" y="751.50">..e() [polkadot-parachain] </text></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (135,981,174 bytes, 11.21%)</title><rect x="85.4873%" y="725" width="11.2080%" height="15" fill="rgb(0,190,116)"/><text x="85.6949%" y="735.50">..) [libstdc++.so.6.0.30] </text></g><g><title>_rjem_malloc [libbytehound.so] (135,981,174 bytes, 11.21%)</title><rect x="85.4873%" y="709" width="11.2080%" height="15" fill="rgb(0,233,146)"/><text x="85.6949%" y="719.50">..alloc [libbytehound.so] </text></g><g><title>sc_client_db::children::read_children [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="965" width="11.3194%" height="15" fill="rgb(0,220,159)"/><text x="85.6949%" y="975.50">..en [polkadot-parachain] </text></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::get [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="949" width="11.3194%" height="15" fill="rgb(0,232,74)"/><text x="85.6949%" y="959.50">..get [polkadot-parachain] </text></g><g><title>kvdb_rocksdb::Database::get [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="933" width="11.3194%" height="15" fill="rgb(0,217,64)"/><text x="85.6949%" y="943.50">..get [polkadot-parachain] </text></g><g><title>rocksdb_get_pinned_cf [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="917" width="11.3194%" height="15" fill="rgb(0,208,62)"/><text x="85.6949%" y="927.50">..cf [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="901" width="11.3194%" height="15" fill="rgb(0,202,171)"/><text x="85.6949%" y="911.50">..e*) [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="885" width="11.3194%" height="15" fill="rgb(0,214,103)"/><text x="85.6949%" y="895.50">..*) [polkadot-parachain] </text></g><g><title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="869" width="11.3194%" height="15" fill="rgb(0,192,175)"/><text x="85.6949%" y="879.50">..&amp;) [polkadot-parachain] </text></g><g><title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, rocksdb::PinnedIteratorsManager*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="853" width="11.3194%" height="15" fill="rgb(0,194,99)"/><text x="85.6949%" y="863.50">..l) [polkadot-parachain] </text></g><g><title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::HistogramImpl*, bool, int, unsigned long) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="837" width="11.3194%" height="15" fill="rgb(0,234,158)"/><text x="85.6949%" y="847.50">..g) [polkadot-parachain] </text></g><g><title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="821" width="11.3194%" height="15" fill="rgb(0,222,104)"/><text x="85.6949%" y="831.50">..l) [polkadot-parachain] </text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="805" width="11.3194%" height="15" fill="rgb(0,215,145)"/><text x="85.6949%" y="815.50">..st [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="789" width="11.3194%" height="15" fill="rgb(0,230,157)"/><text x="85.6949%" y="799.50">..st [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (137,332,567 bytes, 11.32%)</title><rect x="85.4873%" y="773" width="11.3194%" height="15" fill="rgb(0,200,21)"/><text x="85.6949%" y="783.50">..st [polkadot-parachain] </text></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt;(rocksdb::Slice const&amp;, rocksdb::FullTypedCacheInterface&lt;rocksdb::Block_kData, rocksdb::BlockCreateContext, rocksdb::Block_kData::kCacheEntryRole, rocksdb::Cache*&gt;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::BlockContents&amp;&amp;, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::GetContext*) const [polkadot-parachain] (1,351,393 bytes, 0.11%)</title><rect x="96.6954%" y="757" width="0.1114%" height="15" fill="rgb(0,225,107)"/><text x="96.9030%" y="767.50"/></g><g><title>sc_state_db::StateDb&lt;BlockHash,Key,D&gt;::insert_block [polkadot-parachain] (1,883,434 bytes, 0.16%)</title><rect x="96.8068%" y="965" width="0.1552%" height="15" fill="rgb(0,224,184)"/><text x="97.0144%" y="975.50"/></g><g><title>sc_state_db::noncanonical::insert_values [polkadot-parachain] (1,867,792 bytes, 0.15%)</title><rect x="96.8080%" y="949" width="0.1539%" height="15" fill="rgb(0,214,71)"/><text x="97.0156%" y="959.50"/></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry [polkadot-parachain] (1,867,792 bytes, 0.15%)</title><rect x="96.8080%" y="933" width="0.1539%" height="15" fill="rgb(0,217,116)"/><text x="97.0156%" y="943.50"/></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash [polkadot-parachain] (1,867,792 bytes, 0.15%)</title><rect x="96.8080%" y="917" width="0.1539%" height="15" fill="rgb(0,230,45)"/><text x="97.0156%" y="927.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,867,792 bytes, 0.15%)</title><rect x="96.8080%" y="901" width="0.1539%" height="15" fill="rgb(0,233,146)"/><text x="97.0156%" y="911.50"/></g><g><title>&lt;sc_client_db::Backend&lt;Block&gt; as sc_client_api::backend::Backend&lt;Block&gt;&gt;::commit_operation [polkadot-parachain] (152,425,696 bytes, 12.56%)</title><rect x="84.6322%" y="997" width="12.5634%" height="15" fill="rgb(0,192,151)"/><text x="84.8398%" y="1007.50">..ation [polkadot-parachain] </text></g><g><title>sc_client_db::Backend&lt;Block&gt;::try_commit_operation [polkadot-parachain] (152,425,696 bytes, 12.56%)</title><rect x="84.6322%" y="981" width="12.5634%" height="15" fill="rgb(0,216,197)"/><text x="84.8398%" y="991.50">..ation [polkadot-parachain] </text></g><g><title>sp_blockchain::header_metadata::HeaderMetadataCache&lt;Block&gt;::insert_header_metadata [polkadot-parachain] (2,834,448 bytes, 0.23%)</title><rect x="96.9620%" y="965" width="0.2336%" height="15" fill="rgb(0,211,61)"/><text x="97.1696%" y="975.50"/></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow_and_insert [polkadot-parachain] (2,834,448 bytes, 0.23%)</title><rect x="96.9620%" y="949" width="0.2336%" height="15" fill="rgb(0,233,113)"/><text x="97.1696%" y="959.50"/></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow [polkadot-parachain] (2,834,448 bytes, 0.23%)</title><rect x="96.9620%" y="933" width="0.2336%" height="15" fill="rgb(0,202,11)"/><text x="97.1696%" y="943.50"/></g><g><title>_rjem_malloc [libbytehound.so] (2,834,448 bytes, 0.23%)</title><rect x="96.9620%" y="917" width="0.2336%" height="15" fill="rgb(0,233,146)"/><text x="97.1696%" y="927.50"/></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::import_block::{{closure}} [polkadot-parachain] (785,007,325 bytes, 64.70%)</title><rect x="32.5907%" y="1029" width="64.7029%" height="15" fill="rgb(0,233,76)"/><text x="32.7983%" y="1039.50">&lt;alloc::sync::Arc&lt;T&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::import_block::{{closure}} [polkadot-parachain] </text></g><g><title>&lt;&amp;sc_service::client::client::Client&lt;B,E,Block,RA&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::import_block::{{closure}} [polkadot-parachain] (785,007,325 bytes, 64.70%)</title><rect x="32.5907%" y="1013" width="64.7029%" height="15" fill="rgb(0,193,39)"/><text x="32.7983%" y="1023.50">.._service::client::client::Client&lt;B,E,Block,RA&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::import_block::{{closure}} [polkadot-parachain] </text></g><g><title>sc_consensus::import_queue::import_single_block_metered::{{closure}} [polkadot-parachain] (785,025,457 bytes, 64.70%)</title><rect x="32.5907%" y="1077" width="64.7044%" height="15" fill="rgb(0,202,141)"/><text x="32.7983%" y="1087.50">sc_consensus::import_queue::import_single_block_metered::{{closure}} [polkadot-parachain] </text></g><g><title>&lt;alloc::boxed::Box&lt;dyn sc_consensus::block_import::BlockImport&lt;B&gt;+Error = sp_consensus::error::Error+core::marker::Send+core::marker::Sync&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::import_block::{{closure}} [polkadot-parachain] (785,025,457 bytes, 64.70%)</title><rect x="32.5907%" y="1061" width="64.7044%" height="15" fill="rgb(0,192,51)"/><text x="32.7983%" y="1071.50">..:Error+core::marker::Send+core::marker::Sync&gt; as sc_consensus::block_import::BlockImport&lt;B&gt;&gt;::import_block::{{closure}} [polkadot-parachain] </text></g><g><title>&lt;cumulus_client_consensus_common::ParachainBlockImport&lt;Block,BI,BE&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::import_block::{{closure}} [polkadot-parachain] (785,025,457 bytes, 64.70%)</title><rect x="32.5907%" y="1045" width="64.7044%" height="15" fill="rgb(0,193,0)"/><text x="32.7983%" y="1055.50">..mmon::ParachainBlockImport&lt;Block,BI,BE&gt; as sc_consensus::block_import::BlockImport&lt;Block&gt;&gt;::import_block::{{closure}} [polkadot-parachain] </text></g><g><title>sc_consensus::import_queue::basic_queue::BlockImportWorker&lt;B&gt;::new::{{closure}} [polkadot-parachain] (912,760,080 bytes, 75.23%)</title><rect x="22.0625%" y="1093" width="75.2328%" height="15" fill="rgb(0,196,27)"/><text x="22.2701%" y="1103.50">sc_consensus::import_queue::basic_queue::BlockImportWorker&lt;B&gt;::new::{{closure}} [polkadot-parachain] </text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (912,765,768 bytes, 75.23%)</title><rect x="22.0625%" y="1109" width="75.2332%" height="15" fill="rgb(0,192,150)"/><text x="22.2701%" y="1119.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] </text></g><g><title>libp2p_swarm::Swarm&lt;TBehaviour&gt;::handle_pool_event [polkadot-parachain] (1,282,133 bytes, 0.11%)</title><rect x="97.4569%" y="1045" width="0.1057%" height="15" fill="rgb(0,202,72)"/><text x="97.6645%" y="1055.50"/></g><g><title>sc_network::service::NetworkWorker&lt;B,H&gt;::next_action::{{closure}}::{{closure}}::{{closure}} [polkadot-parachain] (2,474,231 bytes, 0.20%)</title><rect x="97.3647%" y="1077" width="0.2039%" height="15" fill="rgb(0,221,133)"/><text x="97.5723%" y="1087.50"/></g><g><title>libp2p_swarm::Swarm&lt;TBehaviour&gt;::poll_next_event [polkadot-parachain] (2,473,657 bytes, 0.20%)</title><rect x="97.3647%" y="1061" width="0.2039%" height="15" fill="rgb(0,224,20)"/><text x="97.5723%" y="1071.50"/></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (3,294,598 bytes, 0.27%)</title><rect x="97.2971%" y="1109" width="0.2716%" height="15" fill="rgb(0,194,153)"/><text x="97.5047%" y="1119.50"/></g><g><title>&lt;sc_network::service::NetworkWorker&lt;B,H&gt; as sc_network::service::traits::NetworkBackend&lt;B,H&gt;&gt;::run::{{closure}} [polkadot-parachain] (3,294,598 bytes, 0.27%)</title><rect x="97.2971%" y="1093" width="0.2716%" height="15" fill="rgb(0,204,141)"/><text x="97.5047%" y="1103.50"/></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (916,132,441 bytes, 75.51%)</title><rect x="22.0625%" y="1125" width="75.5107%" height="15" fill="rgb(0,238,197)"/><text x="22.2701%" y="1135.50">&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] </text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="837" width="0.3764%" height="15" fill="rgb(0,196,0)"/><text x="97.8067%" y="847.50"/></g><g><title>rocksdb::UncompressSerializedBlock(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="821" width="0.3764%" height="15" fill="rgb(0,212,0)"/><text x="97.8067%" y="831.50"/></g><g><title>rocksdb::UncompressBlockData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="805" width="0.3764%" height="15" fill="rgb(0,239,176)"/><text x="97.8067%" y="815.50"/></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="789" width="0.3764%" height="15" fill="rgb(0,195,194)"/><text x="97.8067%" y="799.50"/></g><g><title>rocksdb::Snappy_Uncompress(char const*, unsigned long, unsigned long*, rocksdb::MemoryAllocator*) [polkadot-parachain] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="773" width="0.3764%" height="15" fill="rgb(0,222,62)"/><text x="97.8067%" y="783.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="757" width="0.3764%" height="15" fill="rgb(0,190,116)"/><text x="97.8067%" y="767.50"/></g><g><title>_rjem_malloc [libbytehound.so] (4,566,608 bytes, 0.38%)</title><rect x="97.5991%" y="741" width="0.3764%" height="15" fill="rgb(0,233,146)"/><text x="97.8067%" y="751.50"/></g><g><title>&lt;sc_network_sync::strategy::polkadot::PolkadotSyncingStrategy&lt;B,Client&gt; as sc_network_sync::strategy::SyncingStrategy&lt;B&gt;&gt;::on_validated_block_announce [polkadot-parachain] (4,613,415 bytes, 0.38%)</title><rect x="97.5990%" y="1109" width="0.3803%" height="15" fill="rgb(0,199,4)"/><text x="97.8066%" y="1119.50"/></g><g><title>sc_service::client::client::Client&lt;B,E,Block,RA&gt;::block_status [polkadot-parachain] (4,611,463 bytes, 0.38%)</title><rect x="97.5991%" y="1093" width="0.3801%" height="15" fill="rgb(0,199,203)"/><text x="97.8067%" y="1103.50"/></g><g><title>&lt;sc_client_db::BlockchainDb&lt;Block&gt; as sp_blockchain::header_metadata::HeaderMetadata&lt;Block&gt;&gt;::header_metadata [polkadot-parachain] (4,611,463 bytes, 0.38%)</title><rect x="97.5991%" y="1077" width="0.3801%" height="15" fill="rgb(0,215,19)"/><text x="97.8067%" y="1087.50"/></g><g><title>&lt;sc_client_db::BlockchainDb&lt;Block&gt; as sp_blockchain::backend::HeaderBackend&lt;Block&gt;&gt;::header [polkadot-parachain] (4,611,463 bytes, 0.38%)</title><rect x="97.5991%" y="1061" width="0.3801%" height="15" fill="rgb(0,209,21)"/><text x="97.8067%" y="1071.50"/></g><g><title>sc_client_db::utils::read_header [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="1045" width="0.3801%" height="15" fill="rgb(0,211,4)"/><text x="97.8067%" y="1055.50"/></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::get [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="1029" width="0.3801%" height="15" fill="rgb(0,232,74)"/><text x="97.8067%" y="1039.50"/></g><g><title>kvdb_rocksdb::Database::get [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="1013" width="0.3801%" height="15" fill="rgb(0,217,64)"/><text x="97.8067%" y="1023.50"/></g><g><title>rocksdb_get_pinned_cf [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="997" width="0.3801%" height="15" fill="rgb(0,208,62)"/><text x="97.8067%" y="1007.50"/></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="981" width="0.3801%" height="15" fill="rgb(0,202,171)"/><text x="97.8067%" y="991.50"/></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="965" width="0.3801%" height="15" fill="rgb(0,214,103)"/><text x="97.8067%" y="975.50"/></g><g><title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="949" width="0.3801%" height="15" fill="rgb(0,192,175)"/><text x="97.8067%" y="959.50"/></g><g><title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, rocksdb::PinnedIteratorsManager*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="933" width="0.3801%" height="15" fill="rgb(0,194,99)"/><text x="97.8067%" y="943.50"/></g><g><title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::HistogramImpl*, bool, int, unsigned long) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="917" width="0.3801%" height="15" fill="rgb(0,234,158)"/><text x="97.8067%" y="927.50"/></g><g><title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="901" width="0.3801%" height="15" fill="rgb(0,222,104)"/><text x="97.8067%" y="911.50"/></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="885" width="0.3801%" height="15" fill="rgb(0,215,145)"/><text x="97.8067%" y="895.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="869" width="0.3801%" height="15" fill="rgb(0,230,157)"/><text x="97.8067%" y="879.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (4,611,287 bytes, 0.38%)</title><rect x="97.5991%" y="853" width="0.3801%" height="15" fill="rgb(0,200,21)"/><text x="97.8067%" y="863.50"/></g><g><title>sc_network::utils::LruHashSet&lt;T&gt;::insert [polkadot-parachain] (2,313,744 bytes, 0.19%)</title><rect x="97.9801%" y="1109" width="0.1907%" height="15" fill="rgb(0,195,94)"/><text x="98.1877%" y="1119.50"/></g><g><title>sc_network_sync::engine::SyncingEngine&lt;B,Client&gt;::run::{{closure}} [polkadot-parachain] (7,242,602 bytes, 0.60%)</title><rect x="97.5742%" y="1125" width="0.5970%" height="15" fill="rgb(0,190,89)"/><text x="97.7818%" y="1135.50"/></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush [polkadot-parachain] (1,241,517 bytes, 0.10%)</title><rect x="98.3756%" y="949" width="0.1023%" height="15" fill="rgb(0,238,137)"/><text x="98.5832%" y="959.50"/></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode [polkadot-parachain] (1,241,389 bytes, 0.10%)</title><rect x="98.3756%" y="933" width="0.1023%" height="15" fill="rgb(0,239,183)"/><text x="98.5832%" y="943.50"/></g><g><title>&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll [polkadot-parachain] (3,184,786 bytes, 0.26%)</title><rect x="98.3737%" y="1013" width="0.2625%" height="15" fill="rgb(0,223,20)"/><text x="98.5813%" y="1023.50"/></g><g><title>&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll [polkadot-parachain] (3,184,786 bytes, 0.26%)</title><rect x="98.3737%" y="997" width="0.2625%" height="15" fill="rgb(0,223,20)"/><text x="98.5813%" y="1007.50"/></g><g><title>libp2p_yamux::Muxer&lt;C&gt;::poll_inner [polkadot-parachain] (3,172,242 bytes, 0.26%)</title><rect x="98.3748%" y="981" width="0.2615%" height="15" fill="rgb(0,219,48)"/><text x="98.5824%" y="991.50"/></g><g><title>yamux::connection::Connection&lt;T&gt;::poll_next_inbound [polkadot-parachain] (3,172,242 bytes, 0.26%)</title><rect x="98.3748%" y="965" width="0.2615%" height="15" fill="rgb(0,238,22)"/><text x="98.5824%" y="975.50"/></g><g><title>libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_inbound::{{closure}} [polkadot-parachain] (1,313,440 bytes, 0.11%)</title><rect x="98.7175%" y="1013" width="0.1083%" height="15" fill="rgb(0,221,37)"/><text x="98.9251%" y="1023.50"/></g><g><title>&lt;sc_network::protocol::notifications::upgrade::notifications::NotificationsIn as libp2p_core::upgrade::InboundUpgrade&lt;TSubstream&gt;&gt;::upgrade_inbound::{{closure}} [polkadot-parachain] (1,313,440 bytes, 0.11%)</title><rect x="98.7175%" y="997" width="0.1083%" height="15" fill="rgb(0,230,201)"/><text x="98.9251%" y="1007.50"/></g><g><title>asynchronous_codec::framed::Framed&lt;T,U&gt;::new [polkadot-parachain] (1,313,440 bytes, 0.11%)</title><rect x="98.7175%" y="981" width="0.1083%" height="15" fill="rgb(0,222,26)"/><text x="98.9251%" y="991.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,313,440 bytes, 0.11%)</title><rect x="98.7175%" y="965" width="0.1083%" height="15" fill="rgb(0,233,146)"/><text x="98.9251%" y="975.50"/></g><g><title>libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_outbound::{{closure}} [polkadot-parachain] (1,322,304 bytes, 0.11%)</title><rect x="98.8257%" y="1013" width="0.1090%" height="15" fill="rgb(0,205,51)"/><text x="99.0333%" y="1023.50"/></g><g><title>&lt;sc_network::protocol::notifications::upgrade::notifications::NotificationsOut as libp2p_core::upgrade::OutboundUpgrade&lt;TSubstream&gt;&gt;::upgrade_outbound::{{closure}} [polkadot-parachain] (1,322,304 bytes, 0.11%)</title><rect x="98.8257%" y="997" width="0.1090%" height="15" fill="rgb(0,216,119)"/><text x="99.0333%" y="1007.50"/></g><g><title>asynchronous_codec::framed::Framed&lt;T,U&gt;::new [polkadot-parachain] (1,321,344 bytes, 0.11%)</title><rect x="98.8258%" y="981" width="0.1089%" height="15" fill="rgb(0,222,26)"/><text x="99.0334%" y="991.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,321,344 bytes, 0.11%)</title><rect x="98.8258%" y="965" width="0.1089%" height="15" fill="rgb(0,233,146)"/><text x="99.0334%" y="975.50"/></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (7,905,035 bytes, 0.65%)</title><rect x="98.2849%" y="1045" width="0.6516%" height="15" fill="rgb(0,198,193)"/><text x="98.4925%" y="1055.50"/></g><g><title>libp2p_swarm::connection::Connection&lt;THandler&gt;::poll [polkadot-parachain] (6,827,642 bytes, 0.56%)</title><rect x="98.3737%" y="1029" width="0.5628%" height="15" fill="rgb(0,236,30)"/><text x="98.5813%" y="1039.50"/></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (7,941,166 bytes, 0.65%)</title><rect x="98.2836%" y="1061" width="0.6545%" height="15" fill="rgb(0,194,153)"/><text x="98.4912%" y="1071.50"/></g><g><title>rocksdb::BlockFetcher::PrepareBufferForBlockFromFile() [polkadot-parachain] (1,305,308 bytes, 0.11%)</title><rect x="98.9576%" y="789" width="0.1076%" height="15" fill="rgb(0,224,18)"/><text x="99.1652%" y="799.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (1,305,308 bytes, 0.11%)</title><rect x="98.9576%" y="773" width="0.1076%" height="15" fill="rgb(0,190,116)"/><text x="99.1652%" y="783.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,305,308 bytes, 0.11%)</title><rect x="98.9576%" y="757" width="0.1076%" height="15" fill="rgb(0,233,146)"/><text x="99.1652%" y="767.50"/></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() [polkadot-parachain] (2,555,363 bytes, 0.21%)</title><rect x="98.9576%" y="805" width="0.2106%" height="15" fill="rgb(0,196,0)"/><text x="99.1652%" y="815.50"/></g><g><title>rocksdb::UncompressSerializedBlock(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="789" width="0.1030%" height="15" fill="rgb(0,212,0)"/><text x="99.2728%" y="799.50"/></g><g><title>rocksdb::UncompressBlockData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) [polkadot-parachain] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="773" width="0.1030%" height="15" fill="rgb(0,239,176)"/><text x="99.2728%" y="783.50"/></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) [polkadot-parachain] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="757" width="0.1030%" height="15" fill="rgb(0,195,194)"/><text x="99.2728%" y="767.50"/></g><g><title>rocksdb::Snappy_Uncompress(char const*, unsigned long, unsigned long*, rocksdb::MemoryAllocator*) [polkadot-parachain] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="741" width="0.1030%" height="15" fill="rgb(0,222,62)"/><text x="99.2728%" y="751.50"/></g><g><title>operator new(unsigned long) [libstdc++.so.6.0.30] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="725" width="0.1030%" height="15" fill="rgb(0,190,116)"/><text x="99.2728%" y="735.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,250,055 bytes, 0.10%)</title><rect x="99.0652%" y="709" width="0.1030%" height="15" fill="rgb(0,233,146)"/><text x="99.2728%" y="719.50"/></g><g><title>&lt;sc_client_db::BlockchainDb&lt;Block&gt; as sp_blockchain::backend::Backend&lt;Block&gt;&gt;::body [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="1029" width="0.2131%" height="15" fill="rgb(0,202,136)"/><text x="99.1652%" y="1039.50"/></g><g><title>sc_client_db::BlockchainDb&lt;Block&gt;::body_uncached [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="1013" width="0.2131%" height="15" fill="rgb(0,217,143)"/><text x="99.1652%" y="1023.50"/></g><g><title>&lt;sp_database::kvdb::DbAdapter&lt;D&gt; as sp_database::Database&lt;H&gt;&gt;::get [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="997" width="0.2131%" height="15" fill="rgb(0,232,74)"/><text x="99.1652%" y="1007.50"/></g><g><title>kvdb_rocksdb::Database::get [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="981" width="0.2131%" height="15" fill="rgb(0,217,64)"/><text x="99.1652%" y="991.50"/></g><g><title>rocksdb_get_pinned_cf [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="965" width="0.2131%" height="15" fill="rgb(0,208,62)"/><text x="99.1652%" y="975.50"/></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="949" width="0.2131%" height="15" fill="rgb(0,202,171)"/><text x="99.1652%" y="959.50"/></g><g><title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="933" width="0.2131%" height="15" fill="rgb(0,214,103)"/><text x="99.1652%" y="943.50"/></g><g><title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="917" width="0.2131%" height="15" fill="rgb(0,192,175)"/><text x="99.1652%" y="927.50"/></g><g><title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, rocksdb::PinnedIteratorsManager*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="901" width="0.2131%" height="15" fill="rgb(0,194,99)"/><text x="99.1652%" y="911.50"/></g><g><title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::HistogramImpl*, bool, int, unsigned long) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="885" width="0.2131%" height="15" fill="rgb(0,234,158)"/><text x="99.1652%" y="895.50"/></g><g><title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="869" width="0.2131%" height="15" fill="rgb(0,222,104)"/><text x="99.1652%" y="879.50"/></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="853" width="0.2131%" height="15" fill="rgb(0,215,145)"/><text x="99.1652%" y="863.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool) const [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="837" width="0.2131%" height="15" fill="rgb(0,230,157)"/><text x="99.1652%" y="847.50"/></g><g><title>std::enable_if&lt;((rocksdb::Block_kData::kCacheEntryRole)==((rocksdb::CacheEntryRole)13))||(true), rocksdb::Status&gt;::type rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const [polkadot-parachain] (2,586,012 bytes, 0.21%)</title><rect x="98.9576%" y="821" width="0.2131%" height="15" fill="rgb(0,200,21)"/><text x="99.1652%" y="831.50"/></g><g><title>sc_service::builder::build_default_block_downloader::{{closure}} [polkadot-parachain] (4,193,093 bytes, 0.35%)</title><rect x="98.9576%" y="1061" width="0.3456%" height="15" fill="rgb(0,207,176)"/><text x="99.1652%" y="1071.50"/></g><g><title>&lt;sc_network_sync::block_request_handler::BlockRequestHandler&lt;B,Client&gt; as sc_network_sync::block_relay_protocol::BlockServer&lt;B&gt;&gt;::run::{{closure}} [polkadot-parachain] (4,193,045 bytes, 0.35%)</title><rect x="98.9576%" y="1045" width="0.3456%" height="15" fill="rgb(0,203,123)"/><text x="99.1652%" y="1055.50"/></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::insert [polkadot-parachain] (1,318,928 bytes, 0.11%)</title><rect x="99.1945%" y="1029" width="0.1087%" height="15" fill="rgb(0,195,43)"/><text x="99.4021%" y="1039.50"/></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow_and_insert [polkadot-parachain] (1,318,928 bytes, 0.11%)</title><rect x="99.1945%" y="1013" width="0.1087%" height="15" fill="rgb(0,233,113)"/><text x="99.4021%" y="1023.50"/></g><g><title>schnellru::LruMap&lt;K,V,L,S&gt;::try_grow [polkadot-parachain] (1,318,928 bytes, 0.11%)</title><rect x="99.1945%" y="997" width="0.1087%" height="15" fill="rgb(0,202,11)"/><text x="99.4021%" y="1007.50"/></g><g><title>_rjem_malloc [libbytehound.so] (1,318,928 bytes, 0.11%)</title><rect x="99.1945%" y="981" width="0.1087%" height="15" fill="rgb(0,233,146)"/><text x="99.4021%" y="991.50"/></g><g><title>&lt;tracing_futures::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (13,999,262 bytes, 1.15%)</title><rect x="98.2653%" y="1077" width="1.1539%" height="15" fill="rgb(0,238,197)"/><text x="98.4729%" y="1087.50"/></g><g><title>sc_transaction_pool::common::notification_future::{{closure}} [polkadot-parachain] (1,399,884 bytes, 0.12%)</title><rect x="99.3037%" y="1061" width="0.1154%" height="15" fill="rgb(0,222,38)"/><text x="99.5113%" y="1071.50"/></g><g><title>&lt;sc_transaction_pool::transaction_pool_wrapper::TransactionPoolWrapper&lt;Block,Client&gt; as sc_transaction_pool_api::MaintainedTransactionPool&gt;::maintain::{{closure}} [polkadot-parachain] (1,397,018 bytes, 0.12%)</title><rect x="99.3040%" y="1045" width="0.1151%" height="15" fill="rgb(0,196,12)"/><text x="99.5116%" y="1055.50"/></g><g><title>&lt;sc_transaction_pool::single_state_txpool::single_state_txpool::BasicPool&lt;PoolApi,Block&gt; as sc_transaction_pool_api::MaintainedTransactionPool&gt;::maintain::{{closure}} [polkadot-parachain] (1,397,018 bytes, 0.12%)</title><rect x="99.3040%" y="1029" width="0.1151%" height="15" fill="rgb(0,226,165)"/><text x="99.5116%" y="1039.50"/></g><g><title>sc_transaction_pool::single_state_txpool::single_state_txpool::BasicPool&lt;PoolApi,Block&gt;::handle_enactment::{{closure}} [polkadot-parachain] (1,363,972 bytes, 0.11%)</title><rect x="99.3067%" y="1013" width="0.1124%" height="15" fill="rgb(0,234,158)"/><text x="99.5143%" y="1023.50"/></g><g><title>tokio::runtime::task::raw::poll [polkadot-parachain] (1,007,274,307 bytes, 83.02%)</title><rect x="16.3971%" y="1141" width="83.0229%" height="15" fill="rgb(0,224,1)"/><text x="16.6047%" y="1151.50">tokio::runtime::task::raw::poll [polkadot-parachain] </text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run [polkadot-parachain] (14,026,038 bytes, 1.16%)</title><rect x="98.2640%" y="1125" width="1.1561%" height="15" fill="rgb(0,232,113)"/><text x="98.4716%" y="1135.50"/></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task [polkadot-parachain] (14,017,142 bytes, 1.16%)</title><rect x="98.2647%" y="1109" width="1.1553%" height="15" fill="rgb(0,200,19)"/><text x="98.4723%" y="1119.50"/></g><g><title>tokio::runtime::task::raw::poll [polkadot-parachain] (14,017,142 bytes, 1.16%)</title><rect x="98.2647%" y="1093" width="1.1553%" height="15" fill="rgb(0,224,1)"/><text x="98.4723%" y="1103.50"/></g><g><title>0x000071C912F2684F [libc.so.6] (1,206,211,717 bytes, 99.42%)</title><rect x="0.0000%" y="1221" width="99.4200%" height="15" fill="rgb(0,226,183)"/><text x="0.2076%" y="1231.50">0x000071C912F2684F [libc.so.6] </text></g><g><title>0x000071C912E94AC2 [libc.so.6] (1,206,211,717 bytes, 99.42%)</title><rect x="0.0000%" y="1205" width="99.4200%" height="15" fill="rgb(0,216,56)"/><text x="0.2076%" y="1215.50">0x000071C912E94AC2 [libc.so.6] </text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start [polkadot-parachain] (1,131,319,484 bytes, 93.25%)</title><rect x="6.1729%" y="1189" width="93.2472%" height="15" fill="rgb(0,192,189)"/><text x="6.3805%" y="1199.50">std::sys::pal::unix::thread::Thread::new::thread_start [polkadot-parachain] </text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} [polkadot-parachain] (1,131,319,484 bytes, 93.25%)</title><rect x="6.1729%" y="1173" width="93.2472%" height="15" fill="rgb(0,232,51)"/><text x="6.3805%" y="1183.50">core::ops::function::FnOnce::call_once{{vtable.shim}} [polkadot-parachain] </text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace [polkadot-parachain] (1,131,319,484 bytes, 93.25%)</title><rect x="6.1729%" y="1157" width="93.2472%" height="15" fill="rgb(0,239,69)"/><text x="6.3805%" y="1167.50">std::sys::backtrace::__rust_begin_short_backtrace [polkadot-parachain] </text></g><g><title>sc_network::service::NetworkWorker&lt;B,H&gt;::new [polkadot-parachain] (1,260,209 bytes, 0.10%)</title><rect x="99.4449%" y="1029" width="0.1039%" height="15" fill="rgb(0,215,113)"/><text x="99.6525%" y="1039.50"/></g><g><title>cumulus_client_service::build_network::{{closure}} [polkadot-parachain] (1,585,439 bytes, 0.13%)</title><rect x="99.4208%" y="1061" width="0.1307%" height="15" fill="rgb(0,196,178)"/><text x="99.6284%" y="1071.50"/></g><g><title>sc_service::builder::build_network [polkadot-parachain] (1,581,461 bytes, 0.13%)</title><rect x="99.4211%" y="1045" width="0.1303%" height="15" fill="rgb(0,233,159)"/><text x="99.6287%" y="1055.50"/></g><g><title>sc_network::service::NetworkWorker&lt;B,H&gt;::new [polkadot-parachain] (1,274,037 bytes, 0.11%)</title><rect x="99.6024%" y="1013" width="0.1050%" height="15" fill="rgb(0,215,113)"/><text x="99.8100%" y="1023.50"/></g><g><title>cumulus_relay_chain_minimal_node::build_interface::{{closure}} [polkadot-parachain] (1,889,447 bytes, 0.16%)</title><rect x="99.5528%" y="1045" width="0.1557%" height="15" fill="rgb(0,219,183)"/><text x="99.7604%" y="1055.50"/></g><g><title>cumulus_relay_chain_minimal_node::new_minimal_relay_chain::{{closure}} [polkadot-parachain] (1,888,471 bytes, 0.16%)</title><rect x="99.5529%" y="1029" width="0.1557%" height="15" fill="rgb(0,238,52)"/><text x="99.7605%" y="1039.50"/></g><g><title>cumulus_client_service::build_relay_chain_interface::{{closure}} [polkadot-parachain] (1,907,270 bytes, 0.16%)</title><rect x="99.5515%" y="1061" width="0.1572%" height="15" fill="rgb(0,210,162)"/><text x="99.7591%" y="1071.50"/></g><g><title>sc_service::builder::new_full_parts_record_import [polkadot-parachain] (2,480,363 bytes, 0.20%)</title><rect x="99.7114%" y="1045" width="0.2044%" height="15" fill="rgb(0,223,192)"/><text x="99.9190%" y="1055.50"/></g><g><title>polkadot_omni_node_lib::common::spec::BaseNodeSpec::new_partial [polkadot-parachain] (2,507,545 bytes, 0.21%)</title><rect x="99.7102%" y="1061" width="0.2067%" height="15" fill="rgb(0,236,117)"/><text x="99.9178%" y="1071.50"/></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [polkadot-parachain] (6,079,784 bytes, 0.50%)</title><rect x="99.4208%" y="1077" width="0.5011%" height="15" fill="rgb(0,198,193)"/><text x="99.6284%" y="1087.50"/></g><g><title>polkadot_omni_node_lib::command::run::{{closure}}::{{closure}} [polkadot-parachain] (6,085,597 bytes, 0.50%)</title><rect x="99.4204%" y="1093" width="0.5016%" height="15" fill="rgb(0,218,151)"/><text x="99.6280%" y="1103.50"/></g><g><title>sc_cli::runner::Runner&lt;C&gt;::run_node_until_exit [polkadot-parachain] (6,089,221 bytes, 0.50%)</title><rect x="99.4201%" y="1109" width="0.5019%" height="15" fill="rgb(0,212,153)"/><text x="99.6277%" y="1119.50"/></g><g><title>0x000071C912E29D8F [libc.so.6] (6,865,424 bytes, 0.57%)</title><rect x="99.4200%" y="1189" width="0.5659%" height="15" fill="rgb(0,200,130)"/><text x="99.6276%" y="1199.50"/></g><g><title>main [polkadot-parachain] (6,865,424 bytes, 0.57%)</title><rect x="99.4200%" y="1173" width="0.5659%" height="15" fill="rgb(0,198,136)"/><text x="99.6276%" y="1183.50"/></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace [polkadot-parachain] (6,865,424 bytes, 0.57%)</title><rect x="99.4200%" y="1157" width="0.5659%" height="15" fill="rgb(0,239,69)"/><text x="99.6276%" y="1167.50"/></g><g><title>polkadot_parachain::main [polkadot-parachain] (6,865,424 bytes, 0.57%)</title><rect x="99.4200%" y="1141" width="0.5659%" height="15" fill="rgb(0,230,32)"/><text x="99.6276%" y="1151.50"/></g><g><title>polkadot_omni_node_lib::command::run [polkadot-parachain] (6,865,176 bytes, 0.57%)</title><rect x="99.4201%" y="1125" width="0.5659%" height="15" fill="rgb(0,198,82)"/><text x="99.6277%" y="1135.50"/></g><g><title>all (1,213,248,131 bytes, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(0,202,194)"/><text x="0.2076%" y="1247.50">all </text></g><g><title>_start [polkadot-parachain] (7,036,414 bytes, 0.58%)</title><rect x="99.4200%" y="1221" width="0.5800%" height="15" fill="rgb(0,227,128)"/><text x="99.6276%" y="1231.50"/></g><g><title>__libc_start_main [libc.so.6] (7,036,414 bytes, 0.58%)</title><rect x="99.4200%" y="1205" width="0.5800%" height="15" fill="rgb(0,193,153)"/><text x="99.6276%" y="1215.50"/></g></svg></svg>